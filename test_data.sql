-- phpMyAdmin SQL Dump
-- version 4.0.4.2
-- http://www.phpmyadmin.net
--
-- Host: localhost
-- Generation Time: Aug 17, 2013 at 02:16 PM
-- Server version: 5.1.70-cll
-- PHP Version: 5.3.17

SET SQL_MODE = "NO_AUTO_VALUE_ON_ZERO";
SET time_zone = "+00:00";

--
-- Database: `varunver_AQ`
--

--
-- Truncate table before insert `answers`
--

TRUNCATE TABLE `answers`;
--
-- Dumping data for table `answers`
--

INSERT INTO `answers` (`QuestionId`, `OptionId`, `CreatedAt`) VALUES
(4, 2, '2013-06-24 19:46:17'),
(4, 4, '2013-06-24 19:46:17'),
(5, 1, '2013-07-11 19:04:32'),
(6, 3, '2013-06-29 19:49:33'),
(7, 2, '2013-06-29 19:54:38'),
(8, 1, '2013-06-29 19:58:30'),
(9, 3, '2013-06-29 20:05:59'),
(13, 1, '2013-07-02 19:06:13'),
(12, 1, '2013-06-30 19:11:02'),
(13, 2, '2013-07-02 19:06:13'),
(14, 2, '2013-07-02 19:07:55'),
(15, 2, '2013-07-02 19:11:41'),
(16, 2, '2013-07-02 19:15:59'),
(17, 4, '2013-07-02 19:18:09'),
(18, 3, '2013-07-02 19:21:35'),
(19, 2, '2013-07-02 19:22:56'),
(20, 2, '2013-07-02 19:24:05'),
(20, 3, '2013-07-02 19:24:05'),
(20, 4, '2013-07-02 19:24:05'),
(21, 1, '2013-07-02 19:30:09'),
(21, 4, '2013-07-02 19:30:09'),
(22, 1, '2013-07-02 19:32:21'),
(23, 3, '2013-07-02 19:34:13'),
(24, 2, '2013-07-02 19:35:22'),
(25, 2, '2013-07-05 09:00:42'),
(25, 4, '2013-07-05 09:00:42'),
(25, 5, '2013-07-05 09:00:42'),
(26, 4, '2013-07-05 09:07:18'),
(27, 1, '2013-07-05 09:13:25'),
(28, 3, '2013-07-05 09:15:05'),
(29, 1, '2013-07-05 09:17:05'),
(30, 2, '2013-07-05 09:21:11'),
(31, 2, '2013-07-05 09:23:07'),
(32, 2, '2013-07-05 09:25:28'),
(32, 4, '2013-07-05 09:25:28'),
(33, 3, '2013-07-05 09:29:23'),
(34, 2, '2013-07-05 09:30:58'),
(35, 3, '2013-07-05 09:34:49'),
(101, 1, '2013-07-16 19:32:57'),
(37, 3, '2013-07-05 10:06:28'),
(37, 4, '2013-07-05 10:06:28'),
(38, 1, '2013-07-05 10:08:00'),
(38, 3, '2013-07-05 10:08:00'),
(39, 4, '2013-07-05 11:04:15'),
(40, 2, '2013-07-09 19:38:46'),
(41, 1, '2013-07-09 19:40:41'),
(42, 3, '2013-07-09 19:45:26'),
(43, 1, '2013-07-09 19:49:21'),
(44, 2, '2013-07-09 19:54:47'),
(45, 4, '2013-07-11 19:18:46'),
(46, 1, '2013-07-11 19:35:13'),
(46, 4, '2013-07-11 19:35:13'),
(47, 1, '2013-07-11 19:45:57'),
(47, 2, '2013-07-11 19:45:57'),
(47, 3, '2013-07-11 19:45:57'),
(48, 1, '2013-07-11 19:47:17'),
(49, 3, '2013-07-11 19:48:44'),
(49, 4, '2013-07-11 19:48:44'),
(50, 2, '2013-07-11 19:49:45'),
(51, 1, '2013-07-11 19:50:56'),
(52, 4, '2013-07-11 19:54:08'),
(52, 3, '2013-07-11 19:54:08'),
(52, 1, '2013-07-11 19:54:08'),
(53, 5, '2013-07-12 18:45:39'),
(54, 3, '2013-07-12 18:46:50'),
(55, 2, '2013-07-16 19:50:30'),
(55, 1, '2013-07-16 19:50:30'),
(56, 1, '2013-07-12 18:50:07'),
(57, 1, '2013-07-12 18:58:24'),
(58, 2, '2013-07-12 19:00:29'),
(59, 1, '2013-07-12 19:01:55'),
(60, 2, '2013-07-13 08:47:18'),
(61, 1, '2013-07-13 08:54:54'),
(61, 4, '2013-07-13 08:54:54'),
(62, 2, '2013-07-13 08:56:43'),
(63, 2, '2013-07-13 09:11:59'),
(64, 1, '2013-07-13 09:20:47'),
(64, 2, '2013-07-13 09:20:47'),
(65, 4, '2013-07-13 09:24:00'),
(65, 5, '2013-07-13 09:24:00'),
(66, 2, '2013-07-13 09:25:24'),
(67, 1, '2013-07-13 09:28:27'),
(67, 2, '2013-07-13 09:28:27'),
(68, 2, '2013-07-14 18:30:56'),
(69, 2, '2013-07-14 18:33:05'),
(69, 3, '2013-07-14 18:33:05'),
(70, 2, '2013-07-14 18:36:01'),
(71, 4, '2013-07-16 18:29:32'),
(72, 2, '2013-07-16 18:32:02'),
(73, 2, '2013-07-16 18:33:58'),
(74, 3, '2013-07-16 18:35:10'),
(75, 1, '2013-07-16 18:36:35'),
(75, 4, '2013-07-16 18:36:35'),
(76, 1, '2013-07-16 18:38:54'),
(76, 2, '2013-07-16 18:38:54'),
(77, 2, '2013-07-16 18:40:42'),
(78, 2, '2013-07-16 18:42:09'),
(79, 1, '2013-07-16 18:46:04'),
(80, 1, '2013-07-16 18:47:50'),
(81, 3, '2013-07-16 18:49:13'),
(82, 2, '2013-07-16 18:50:39'),
(84, 3, '2013-07-16 18:54:02'),
(85, 2, '2013-07-16 18:55:33'),
(86, 2, '2013-07-16 19:53:05'),
(87, 1, '2013-07-16 18:58:12'),
(88, 2, '2013-07-16 18:59:36'),
(89, 2, '2013-07-16 19:01:05'),
(90, 3, '2013-07-16 19:02:14'),
(91, 4, '2013-07-16 19:03:24'),
(92, 2, '2013-07-16 19:04:45'),
(93, 3, '2013-07-16 19:07:08'),
(94, 1, '2013-07-16 19:08:06'),
(95, 1, '2013-07-16 19:10:02'),
(95, 3, '2013-07-16 19:10:02'),
(95, 4, '2013-07-16 19:10:02'),
(96, 3, '2013-07-16 19:12:01'),
(97, 2, '2013-07-16 19:15:26'),
(97, 3, '2013-07-16 19:15:26'),
(97, 4, '2013-07-16 19:15:26'),
(98, 2, '2013-07-16 19:18:05'),
(98, 3, '2013-07-16 19:18:05'),
(99, 1, '2013-07-16 19:19:17'),
(100, 3, '2013-07-16 19:20:30'),
(101, 3, '2013-07-16 19:32:57'),
(102, 1, '2013-07-16 19:37:31'),
(102, 4, '2013-07-16 19:37:31'),
(103, 3, '2013-07-19 19:25:32'),
(104, 3, '2013-07-19 19:28:02'),
(105, 2, '2013-07-19 19:30:59'),
(106, 2, '2013-07-19 19:32:52'),
(106, 4, '2013-07-19 19:32:52'),
(107, 1, '2013-07-19 19:35:30'),
(107, 2, '2013-07-19 19:35:30'),
(108, 1, '2013-07-19 19:36:58'),
(108, 4, '2013-07-19 19:36:58'),
(109, 2, '2013-07-19 19:40:22'),
(110, 3, '2013-07-19 19:41:14'),
(111, 2, '2013-07-19 19:44:30'),
(112, 3, '2013-07-19 19:46:06'),
(113, 1, '2013-07-19 19:48:29'),
(114, 2, '2013-07-19 19:51:00'),
(115, 3, '2013-07-19 19:55:18'),
(116, 1, '2013-07-19 20:02:51'),
(117, 1, '2013-07-25 18:23:56'),
(117, 2, '2013-07-25 18:23:56'),
(118, 1, '2013-07-25 18:25:36'),
(119, 3, '2013-07-25 18:28:18'),
(119, 4, '2013-07-25 18:28:18'),
(120, 2, '2013-07-25 18:30:29'),
(120, 3, '2013-07-25 18:30:29'),
(121, 3, '2013-07-25 18:33:45'),
(122, 3, '2013-07-25 18:41:55'),
(123, 4, '2013-07-25 18:43:38'),
(124, 3, '2013-07-25 18:45:13'),
(125, 4, '2013-07-25 18:47:21'),
(126, 4, '2013-07-25 18:49:28'),
(127, 2, '2013-07-25 18:51:22'),
(128, 1, '2013-07-25 18:54:14'),
(129, 2, '2013-08-13 18:39:23'),
(130, 4, '2013-08-13 18:41:13'),
(131, 2, '2013-08-13 18:44:06'),
(132, 1, '2013-08-13 18:49:07'),
(132, 2, '2013-08-13 18:49:07'),
(132, 3, '2013-08-13 18:49:07'),
(133, 2, '2013-08-13 19:14:04'),
(134, 1, '2013-08-13 19:14:57'),
(135, 2, '2013-08-14 19:03:32'),
(136, 1, '2013-08-14 19:04:53'),
(136, 2, '2013-08-14 19:04:53'),
(137, 1, '2013-08-14 19:06:19'),
(138, 1, '2013-08-14 19:10:08'),
(139, 1, '2013-08-14 19:15:40'),
(140, 1, '2013-08-14 19:21:50');

--
-- Truncate table before insert `meta_data`
--

TRUNCATE TABLE `meta_data`;
--
-- Dumping data for table `meta_data`
--

INSERT INTO `meta_data` (`QuestionId`, `MetaKey`, `MetaValue`, `CreatedAt`) VALUES
(4, 'tag', 'ABAP', '2013-06-24 19:46:36'),
(5, 'sync', 'Premium', '2013-07-11 19:04:32'),
(6, 'tag', 'ABAP', '2013-06-29 19:50:34'),
(7, 'tag', 'Database', '2013-07-12 19:07:05'),
(8, 'tag', 'DDIC', '2013-06-29 19:58:55'),
(9, 'tag', 'ABAP', '2013-06-29 20:06:32'),
(12, 'tag', 'DDIC', '2013-06-30 19:11:02'),
(13, 'tag', 'DDIC', '2013-07-02 19:06:13'),
(14, 'tag', 'ABAP', '2013-07-02 19:07:55'),
(15, 'tag', 'ABAP', '2013-07-02 19:11:41'),
(16, 'tag', 'ABAP', '2013-07-02 19:15:59'),
(17, 'tag', 'DDIC', '2013-07-02 19:18:09'),
(18, 'tag', 'DDIC', '2013-07-02 19:21:35'),
(19, 'tag', 'DDIC', '2013-07-02 19:22:56'),
(20, 'tag', 'DDIC', '2013-07-02 19:24:05'),
(21, 'tag', 'DDIC', '2013-07-02 19:30:09'),
(22, 'tag', 'ABAP', '2013-07-02 19:32:21'),
(23, 'tag', 'ABAP', '2013-07-02 19:34:13'),
(24, 'tag', 'ABAP', '2013-07-02 19:35:22'),
(25, 'tag', 'Database', '2013-07-05 09:00:42'),
(62, 'sync', 'Premium', '2013-07-13 08:56:43'),
(62, 'tag', 'Module Pool', '2013-07-13 08:56:43'),
(61, 'sync', 'Free', '2013-07-13 08:54:54'),
(26, 'tag', 'ABAP', '2013-07-12 19:09:46'),
(61, 'sync', 'Premium', '2013-07-13 08:54:54'),
(27, 'tag', 'DDIC', '2013-07-12 19:11:16'),
(61, 'tag', 'Database', '2013-07-13 08:54:54'),
(28, 'tag', 'ABAP', '2013-07-12 19:12:45'),
(29, 'tag', 'Module Pool', '2013-07-12 19:13:24'),
(30, 'tag', 'ABAP', '2013-07-12 19:15:59'),
(60, 'sync', 'Free', '2013-07-13 08:47:18'),
(60, 'sync', 'Premium', '2013-07-13 08:47:18'),
(31, 'tag', 'Database', '2013-07-12 19:17:19'),
(60, 'tag', 'Module Pool', '2013-07-13 08:47:18'),
(32, 'tag', 'ABAP', '2013-07-12 19:14:12'),
(33, 'tag', 'ABAP', '2013-07-05 09:29:23'),
(34, 'tag', 'DDIC', '2013-07-05 09:30:58'),
(35, 'tag', 'DDIC', '2013-07-05 09:34:49'),
(101, 'sync', 'Free', '2013-07-16 19:32:57'),
(37, 'tag', 'DDIC', '2013-07-05 10:06:28'),
(38, 'tag', 'ABAP', '2013-07-05 10:08:00'),
(39, 'tag', 'ABAP', '2013-07-05 11:04:15'),
(4, 'sync', 'Free', '2013-07-08 19:46:00'),
(5, 'sync', 'Free', '2013-07-11 19:04:32'),
(6, 'sync', 'Free', '2013-07-08 19:46:00'),
(7, 'sync', 'Free', '2013-07-08 19:46:00'),
(8, 'sync', 'Free', '2013-07-08 19:46:00'),
(9, 'sync', 'Free', '2013-07-08 19:46:00'),
(12, 'sync', 'Free', '2013-07-08 19:46:00'),
(13, 'sync', 'Free', '2013-07-08 19:46:00'),
(14, 'sync', 'Free', '2013-07-08 19:46:00'),
(15, 'sync', 'Free', '2013-07-08 19:46:00'),
(16, 'sync', 'Free', '2013-07-08 19:46:00'),
(17, 'sync', 'Free', '2013-07-08 19:46:00'),
(18, 'sync', 'Free', '2013-07-08 19:46:00'),
(19, 'sync', 'Free', '2013-07-08 19:46:00'),
(20, 'sync', 'Free', '2013-07-08 19:46:00'),
(21, 'sync', 'Free', '2013-07-08 19:46:00'),
(22, 'sync', 'Free', '2013-07-08 19:46:00'),
(23, 'sync', 'Free', '2013-07-08 19:46:00'),
(24, 'sync', 'Free', '2013-07-08 19:46:00'),
(25, 'sync', 'Free', '2013-07-08 19:46:00'),
(26, 'sync', 'Free', '2013-07-08 19:46:00'),
(27, 'sync', 'Free', '2013-07-08 19:46:00'),
(28, 'sync', 'Free', '2013-07-08 19:46:00'),
(29, 'sync', 'Free', '2013-07-08 19:46:00'),
(30, 'sync', 'Free', '2013-07-08 19:46:00'),
(31, 'sync', 'Free', '2013-07-08 19:46:00'),
(32, 'sync', 'Free', '2013-07-08 19:46:00'),
(33, 'sync', 'Free', '2013-07-08 19:46:00'),
(34, 'sync', 'Free', '2013-07-08 19:46:00'),
(35, 'sync', 'Free', '2013-07-08 19:46:00'),
(101, 'sync', 'Premium', '2013-07-16 19:32:57'),
(37, 'sync', 'Free', '2013-07-08 19:46:00'),
(38, 'sync', 'Free', '2013-07-08 19:46:00'),
(39, 'sync', 'Free', '2013-07-08 19:46:00'),
(40, 'tag', 'Database', '2013-07-12 19:18:47'),
(41, 'tag', 'ABAP', '2013-07-09 19:40:41'),
(42, 'tag', 'ABAP', '2013-07-09 19:45:26'),
(71, 'sync', 'Premium', '2013-07-16 18:29:32'),
(43, 'tag', 'Database', '2013-07-12 19:18:52'),
(71, 'tag', 'ABAP', '2013-07-16 18:29:32'),
(44, 'tag', 'Database', '2013-07-12 19:18:57'),
(4, 'sync', 'Premium', '2013-07-09 20:13:03'),
(40, 'sync', 'Premium', '2013-07-09 20:03:35'),
(41, 'sync', 'Premium', '2013-07-09 20:03:35'),
(42, 'sync', 'Premium', '2013-07-09 20:03:35'),
(43, 'sync', 'Premium', '2013-07-09 20:03:35'),
(44, 'sync', 'Premium', '2013-07-09 20:03:54'),
(5, 'tag', 'ABAP', '2013-07-11 19:04:32'),
(6, 'sync', 'Premium', '2013-07-09 20:16:31'),
(7, 'sync', 'Premium', '2013-07-09 20:16:31'),
(8, 'sync', 'Premium', '2013-07-09 20:16:31'),
(9, 'sync', 'Premium', '2013-07-09 20:16:31'),
(12, 'sync', 'Premium', '2013-07-09 20:16:31'),
(13, 'sync', 'Premium', '2013-07-09 20:16:31'),
(14, 'sync', 'Premium', '2013-07-09 20:16:31'),
(15, 'sync', 'Premium', '2013-07-09 20:16:31'),
(16, 'sync', 'Premium', '2013-07-09 20:16:31'),
(17, 'sync', 'Premium', '2013-07-09 20:16:31'),
(18, 'sync', 'Premium', '2013-07-09 20:16:31'),
(19, 'sync', 'Premium', '2013-07-09 20:16:31'),
(20, 'sync', 'Premium', '2013-07-09 20:16:31'),
(21, 'sync', 'Premium', '2013-07-09 20:16:31'),
(22, 'sync', 'Premium', '2013-07-09 20:16:31'),
(23, 'sync', 'Premium', '2013-07-09 20:16:31'),
(24, 'sync', 'Premium', '2013-07-09 20:16:31'),
(25, 'sync', 'Premium', '2013-07-09 20:16:31'),
(26, 'sync', 'Premium', '2013-07-09 20:16:31'),
(27, 'sync', 'Premium', '2013-07-09 20:16:31'),
(28, 'sync', 'Premium', '2013-07-09 20:16:31'),
(29, 'sync', 'Premium', '2013-07-09 20:16:31'),
(30, 'sync', 'Premium', '2013-07-09 20:16:31'),
(31, 'sync', 'Premium', '2013-07-09 20:16:31'),
(32, 'sync', 'Premium', '2013-07-09 20:16:31'),
(33, 'sync', 'Premium', '2013-07-09 20:16:31'),
(34, 'sync', 'Premium', '2013-07-09 20:16:31'),
(35, 'sync', 'Premium', '2013-07-09 20:16:31'),
(101, 'tag', 'Locking', '2013-07-16 19:32:57'),
(37, 'sync', 'Premium', '2013-07-09 20:16:31'),
(38, 'sync', 'Premium', '2013-07-09 20:16:31'),
(39, 'sync', 'Premium', '2013-07-09 20:16:31'),
(45, 'tag', 'Module Pool', '2013-07-11 19:18:46'),
(45, 'sync', 'Free', '2013-07-11 19:18:46'),
(45, 'sync', 'Premium', '2013-07-11 19:25:55'),
(46, 'tag', 'ABAP', '2013-07-11 19:35:13'),
(46, 'sync', 'Premium', '2013-07-11 19:35:13'),
(46, 'sync', 'Free', '2013-07-11 19:35:13'),
(47, 'tag', 'ABAP', '2013-07-11 19:45:57'),
(47, 'sync', 'Premium', '2013-07-11 19:45:57'),
(47, 'sync', 'Free', '2013-07-11 19:45:57'),
(48, 'tag', 'ABAP', '2013-07-11 19:47:17'),
(48, 'sync', 'Premium', '2013-07-11 19:47:17'),
(48, 'sync', 'Free', '2013-07-11 19:47:17'),
(49, 'tag', 'ABAP', '2013-07-11 19:48:44'),
(49, 'sync', 'Premium', '2013-07-11 19:48:44'),
(49, 'sync', 'Free', '2013-07-11 19:48:44'),
(50, 'tag', 'ABAP', '2013-07-11 19:49:45'),
(50, 'sync', 'Premium', '2013-07-11 19:49:45'),
(50, 'sync', 'Free', '2013-07-11 19:49:45'),
(51, 'tag', 'Locking', '2013-07-11 19:50:56'),
(51, 'sync', 'Premium', '2013-07-11 19:50:56'),
(51, 'sync', 'Free', '2013-07-11 19:50:56'),
(52, 'sync', 'Premium', '2013-07-11 19:54:08'),
(52, 'tag', 'Module Pool', '2013-07-11 19:54:08'),
(52, 'sync', 'Free', '2013-07-11 19:54:08'),
(53, 'tag', 'Module Pool', '2013-07-12 18:45:39'),
(53, 'sync', 'Premium', '2013-07-12 18:45:39'),
(53, 'sync', 'Free', '2013-07-12 18:45:39'),
(54, 'tag', 'Module Pool', '2013-07-12 18:46:50'),
(54, 'sync', 'Premium', '2013-07-12 18:46:50'),
(54, 'sync', 'Free', '2013-07-12 18:46:50'),
(55, 'sync', 'Premium', '2013-07-16 19:50:30'),
(55, 'tag', 'ABAP', '2013-07-16 19:50:30'),
(56, 'tag', 'Module Pool', '2013-07-12 18:50:07'),
(56, 'sync', 'Premium', '2013-07-12 18:50:07'),
(57, 'tag', 'Database', '2013-07-12 19:19:51'),
(57, 'sync', 'Premium', '2013-07-12 18:58:24'),
(58, 'tag', 'ABAP', '2013-07-12 19:00:29'),
(58, 'sync', 'Premium', '2013-07-12 19:00:29'),
(59, 'tag', 'Module Pool', '2013-07-12 19:01:55'),
(59, 'sync', 'Premium', '2013-07-12 19:01:55'),
(62, 'sync', 'Free', '2013-07-13 08:56:43'),
(63, 'tag', 'Database', '2013-07-13 09:11:59'),
(63, 'sync', 'Premium', '2013-07-13 09:11:59'),
(63, 'sync', 'Free', '2013-07-13 09:11:59'),
(64, 'tag', 'Module Pool', '2013-07-13 09:20:47'),
(64, 'sync', 'Premium', '2013-07-13 09:20:47'),
(64, 'sync', 'Free', '2013-07-13 09:20:47'),
(65, 'tag', 'Module Pool', '2013-07-13 09:24:00'),
(65, 'sync', 'Premium', '2013-07-13 09:24:00'),
(65, 'sync', 'Free', '2013-07-13 09:24:00'),
(66, 'tag', 'Module Pool', '2013-07-13 09:25:24'),
(66, 'sync', 'Premium', '2013-07-13 09:25:24'),
(66, 'sync', 'Free', '2013-07-13 09:25:24'),
(67, 'tag', 'Module Pool', '2013-07-13 09:28:27'),
(67, 'sync', 'Premium', '2013-07-13 09:28:27'),
(67, 'sync', 'Free', '2013-07-13 09:28:27'),
(68, 'tag', 'Module Pool', '2013-07-14 18:30:56'),
(68, 'sync', 'Premium', '2013-07-14 18:30:56'),
(68, 'sync', 'Free', '2013-07-14 18:30:56'),
(69, 'tag', 'ABAP', '2013-07-14 18:33:05'),
(69, 'sync', 'Premium', '2013-07-14 18:33:05'),
(70, 'tag', 'Module Pool', '2013-07-14 18:36:01'),
(70, 'sync', 'Premium', '2013-07-14 18:36:01'),
(70, 'sync', 'Free', '2013-07-14 18:36:01'),
(72, 'tag', 'ABAP', '2013-07-16 18:32:02'),
(72, 'sync', 'Premium', '2013-07-16 18:32:02'),
(73, 'tag', 'Module Pool', '2013-07-16 18:33:58'),
(73, 'sync', 'Premium', '2013-07-16 18:33:58'),
(73, 'sync', 'Free', '2013-07-16 18:33:58'),
(74, 'tag', 'Module Pool', '2013-07-16 18:35:10'),
(74, 'sync', 'Premium', '2013-07-16 18:35:10'),
(74, 'sync', 'Free', '2013-07-16 18:35:10'),
(75, 'tag', 'Module Pool', '2013-07-16 18:36:35'),
(75, 'sync', 'Premium', '2013-07-16 18:36:35'),
(75, 'sync', 'Free', '2013-07-16 18:36:35'),
(76, 'tag', 'Locking', '2013-07-16 18:38:54'),
(76, 'sync', 'Premium', '2013-07-16 18:38:54'),
(76, 'sync', 'Free', '2013-07-16 18:38:54'),
(77, 'tag', 'Module Pool', '2013-07-16 18:40:42'),
(77, 'sync', 'Premium', '2013-07-16 18:40:42'),
(78, 'tag', 'Module Pool', '2013-07-16 18:42:09'),
(78, 'sync', 'Premium', '2013-07-16 18:42:09'),
(79, 'tag', 'Module Pool', '2013-07-16 18:46:04'),
(79, 'sync', 'Premium', '2013-07-16 18:46:04'),
(79, 'sync', 'Free', '2013-07-16 18:46:04'),
(80, 'tag', 'Module Pool', '2013-07-16 18:47:50'),
(80, 'sync', 'Premium', '2013-07-16 18:47:50'),
(80, 'sync', 'Free', '2013-07-16 18:47:50'),
(81, 'tag', 'Locking', '2013-07-16 18:49:13'),
(81, 'sync', 'Premium', '2013-07-16 18:49:13'),
(81, 'sync', 'Free', '2013-07-16 18:49:13'),
(82, 'tag', 'Database', '2013-07-16 18:50:39'),
(82, 'sync', 'Premium', '2013-07-16 18:50:39'),
(82, 'sync', 'Free', '2013-07-16 18:50:39'),
(84, 'sync', 'Premium', '2013-07-16 18:54:02'),
(84, 'tag', 'Module Pool', '2013-07-16 18:54:02'),
(84, 'sync', 'Free', '2013-07-16 18:54:02'),
(85, 'tag', 'Database', '2013-07-16 18:55:33'),
(85, 'sync', 'Premium', '2013-07-16 18:55:33'),
(86, 'sync', 'Free', '2013-07-16 19:53:05'),
(86, 'sync', 'Premium', '2013-07-16 19:53:05'),
(86, 'tag', 'ABAP', '2013-07-16 19:53:05'),
(87, 'tag', 'Module Pool', '2013-07-16 18:58:12'),
(87, 'sync', 'Premium', '2013-07-16 18:58:12'),
(87, 'sync', 'Free', '2013-07-16 18:58:12'),
(88, 'tag', 'Module Pool', '2013-07-16 18:59:36'),
(88, 'sync', 'Premium', '2013-07-16 18:59:36'),
(88, 'sync', 'Free', '2013-07-16 18:59:36'),
(89, 'tag', 'Database', '2013-07-16 19:01:05'),
(89, 'sync', 'Premium', '2013-07-16 19:01:05'),
(89, 'sync', 'Free', '2013-07-16 19:01:05'),
(90, 'tag', 'Locking', '2013-07-16 19:02:14'),
(90, 'sync', 'Premium', '2013-07-16 19:02:14'),
(90, 'sync', 'Free', '2013-07-16 19:02:14'),
(91, 'tag', 'Module Pool', '2013-07-16 19:03:24'),
(91, 'sync', 'Premium', '2013-07-16 19:03:24'),
(91, 'sync', 'Free', '2013-07-16 19:03:24'),
(92, 'tag', 'Module Pool', '2013-07-16 19:04:45'),
(92, 'sync', 'Premium', '2013-07-16 19:04:45'),
(92, 'sync', 'Free', '2013-07-16 19:04:45'),
(93, 'tag', 'Module Pool', '2013-07-16 19:07:08'),
(93, 'sync', 'Premium', '2013-07-16 19:07:08'),
(93, 'sync', 'Free', '2013-07-16 19:07:08'),
(94, 'tag', 'Database', '2013-07-16 19:08:06'),
(94, 'sync', 'Premium', '2013-07-16 19:08:06'),
(94, 'sync', 'Free', '2013-07-16 19:08:06'),
(95, 'tag', 'Database', '2013-07-16 19:10:02'),
(95, 'sync', 'Premium', '2013-07-16 19:10:02'),
(96, 'tag', 'Locking', '2013-07-16 19:12:01'),
(96, 'sync', 'Premium', '2013-07-16 19:12:01'),
(96, 'sync', 'Free', '2013-07-16 19:12:01'),
(97, 'tag', 'Database', '2013-07-16 19:15:26'),
(97, 'sync', 'Premium', '2013-07-16 19:15:26'),
(98, 'tag', 'Locking', '2013-07-16 19:18:05'),
(98, 'sync', 'Premium', '2013-07-16 19:18:05'),
(99, 'tag', 'Module Pool', '2013-07-16 19:19:17'),
(99, 'sync', 'Premium', '2013-07-16 19:19:17'),
(99, 'sync', 'Free', '2013-07-16 19:19:17'),
(100, 'tag', 'Module Pool', '2013-07-16 19:20:30'),
(100, 'sync', 'Premium', '2013-07-16 19:20:30'),
(100, 'sync', 'Free', '2013-07-16 19:20:30'),
(102, 'tag', 'Module Pool', '2013-07-16 19:37:31'),
(102, 'sync', 'Premium', '2013-07-16 19:37:31'),
(55, 'sync', 'Free', '2013-07-16 19:50:30'),
(103, 'tag', 'Module Pool', '2013-07-19 19:25:32'),
(103, 'sync', 'Premium', '2013-07-19 19:25:32'),
(103, 'sync', 'Free', '2013-07-19 19:25:32'),
(104, 'tag', 'Database', '2013-07-19 19:28:02'),
(104, 'sync', 'Premium', '2013-07-19 19:28:02'),
(104, 'sync', 'Free', '2013-07-19 19:28:02'),
(105, 'tag', 'ABAP', '2013-07-19 19:30:59'),
(105, 'sync', 'Premium', '2013-07-19 19:30:59'),
(105, 'sync', 'Free', '2013-07-19 19:30:59'),
(106, 'tag', 'Database', '2013-07-19 19:32:52'),
(106, 'sync', 'Premium', '2013-07-19 19:32:52'),
(106, 'sync', 'Free', '2013-07-19 19:32:52'),
(107, 'tag', 'Module Pool', '2013-07-19 19:35:30'),
(107, 'sync', 'Premium', '2013-07-19 19:35:30'),
(107, 'sync', 'Free', '2013-07-19 19:35:30'),
(108, 'tag', 'Database', '2013-07-19 19:36:58'),
(108, 'sync', 'Premium', '2013-07-19 19:36:58'),
(108, 'sync', 'Free', '2013-07-19 19:36:58'),
(109, 'tag', 'Locking', '2013-07-19 19:40:22'),
(109, 'sync', 'Premium', '2013-07-19 19:40:22'),
(109, 'sync', 'Free', '2013-07-19 19:40:22'),
(110, 'tag', 'Module Pool', '2013-07-19 19:41:14'),
(110, 'sync', 'Premium', '2013-07-19 19:41:14'),
(110, 'sync', 'Free', '2013-07-19 19:41:14'),
(111, 'tag', 'Module Pool', '2013-07-19 19:44:30'),
(111, 'sync', 'Premium', '2013-07-19 19:44:30'),
(111, 'sync', 'Free', '2013-07-19 19:44:30'),
(112, 'tag', 'ABAP', '2013-07-19 19:46:06'),
(112, 'sync', 'Premium', '2013-07-19 19:46:06'),
(112, 'sync', 'Free', '2013-07-19 19:46:06'),
(113, 'tag', 'ABAP', '2013-07-19 19:48:29'),
(113, 'sync', 'Premium', '2013-07-19 19:48:29'),
(113, 'sync', 'Free', '2013-07-19 19:48:29'),
(114, 'tag', 'Module Pool', '2013-07-19 19:51:00'),
(114, 'sync', 'Premium', '2013-07-19 19:51:00'),
(114, 'sync', 'Free', '2013-07-19 19:51:00'),
(115, 'tag', 'Locking', '2013-07-19 19:55:18'),
(115, 'sync', 'Premium', '2013-07-19 19:55:18'),
(115, 'sync', 'Free', '2013-07-19 19:55:18'),
(116, 'tag', 'ABAP', '2013-07-19 20:02:51'),
(116, 'sync', 'Premium', '2013-07-19 20:02:51'),
(116, 'sync', 'Free', '2013-07-19 20:02:51'),
(117, 'tag', 'Database', '2013-07-25 18:23:56'),
(117, 'sync', 'Premium', '2013-07-25 18:23:56'),
(117, 'sync', 'Free', '2013-07-25 18:23:56'),
(118, 'tag', 'Database', '2013-07-25 18:25:36'),
(118, 'sync', 'Premium', '2013-07-25 18:25:36'),
(118, 'sync', 'Free', '2013-07-25 18:25:36'),
(119, 'tag', 'DDIC', '2013-07-25 18:28:18'),
(119, 'sync', 'Premium', '2013-07-25 18:28:18'),
(119, 'sync', 'Free', '2013-07-25 18:28:18'),
(120, 'tag', 'Database', '2013-07-25 18:30:29'),
(120, 'sync', 'Premium', '2013-07-25 18:30:29'),
(120, 'sync', 'Free', '2013-07-25 18:30:29'),
(121, 'tag', 'DDIC', '2013-07-25 18:33:45'),
(121, 'sync', 'Premium', '2013-07-25 18:33:45'),
(121, 'sync', 'Free', '2013-07-25 18:33:45'),
(122, 'tag', 'DDIC', '2013-07-25 18:41:55'),
(122, 'sync', 'Premium', '2013-07-25 18:41:55'),
(122, 'sync', 'Free', '2013-07-25 18:41:55'),
(123, 'tag', 'ABAP', '2013-07-25 18:43:38'),
(123, 'sync', 'Premium', '2013-07-25 18:43:38'),
(124, 'tag', 'ABAP', '2013-07-25 18:45:13'),
(124, 'sync', 'Premium', '2013-07-25 18:45:13'),
(124, 'sync', 'Free', '2013-07-25 18:45:13'),
(125, 'tag', 'ABAP', '2013-07-25 18:47:21'),
(125, 'sync', 'Premium', '2013-07-25 18:47:21'),
(125, 'sync', 'Free', '2013-07-25 18:47:21'),
(126, 'tag', 'ABAP', '2013-07-25 18:49:28'),
(126, 'sync', 'Premium', '2013-07-25 18:49:28'),
(126, 'sync', 'Free', '2013-07-25 18:49:28'),
(127, 'tag', 'DDIC', '2013-07-25 18:51:22'),
(127, 'sync', 'Premium', '2013-07-25 18:51:22'),
(127, 'sync', 'Free', '2013-07-25 18:51:22'),
(128, 'tag', 'ABAP', '2013-07-25 18:54:14'),
(128, 'sync', 'Premium', '2013-07-25 18:54:14'),
(128, 'sync', 'Free', '2013-07-25 18:54:14'),
(129, 'tag', 'OO ABAP', '2013-08-13 18:39:23'),
(129, 'sync', 'Premium', '2013-08-13 18:39:23'),
(129, 'sync', 'Free', '2013-08-13 18:39:23'),
(130, 'tag', 'OO ABAP', '2013-08-13 18:41:13'),
(130, 'sync', 'Premium', '2013-08-13 18:41:13'),
(130, 'sync', 'Free', '2013-08-13 18:41:13'),
(131, 'tag', 'OO ABAP', '2013-08-13 18:44:06'),
(131, 'sync', 'Premium', '2013-08-13 18:44:06'),
(132, 'tag', 'OO ABAP', '2013-08-13 18:49:07'),
(132, 'sync', 'Premium', '2013-08-13 18:49:07'),
(132, 'sync', 'Free', '2013-08-13 18:49:07'),
(133, 'tag', 'OO ABAP', '2013-08-13 19:14:04'),
(133, 'sync', 'Premium', '2013-08-13 19:14:04'),
(133, 'sync', 'Free', '2013-08-13 19:14:04'),
(134, 'tag', 'OO ABAP', '2013-08-13 19:14:57'),
(134, 'sync', 'Premium', '2013-08-13 19:14:57'),
(134, 'sync', 'Free', '2013-08-13 19:14:57'),
(135, 'tag', 'OO ABAP', '2013-08-14 19:03:32'),
(135, 'sync', 'Premium', '2013-08-14 19:03:32'),
(136, 'tag', 'OO ABAP', '2013-08-14 19:04:53'),
(136, 'sync', 'Premium', '2013-08-14 19:04:53'),
(137, 'tag', 'OO ABAP', '2013-08-14 19:06:19'),
(137, 'sync', 'Premium', '2013-08-14 19:06:19'),
(137, 'sync', 'Free', '2013-08-14 19:06:19'),
(138, 'tag', 'OO ABAP', '2013-08-14 19:10:08'),
(138, 'sync', 'Premium', '2013-08-14 19:10:08'),
(138, 'sync', 'Free', '2013-08-14 19:10:08'),
(139, 'tag', 'OO ABAP', '2013-08-14 19:15:40'),
(139, 'sync', 'Premium', '2013-08-14 19:15:40'),
(140, 'tag', 'OO ABAP', '2013-08-14 19:21:50'),
(140, 'sync', 'Premium', '2013-08-14 19:21:50');

--
-- Truncate table before insert `options`
--

TRUNCATE TABLE `options`;
--
-- Dumping data for table `options`
--

INSERT INTO `options` (`QuestionId`, `OptionId`, `OptionValue`, `CreatedAt`) VALUES
(4, 1, 'End-of-selection', '2013-06-24 19:45:15'),
(4, 2, 'End-of-initialization', '2013-06-24 19:45:15'),
(4, 3, 'Get', '2013-06-24 19:45:40'),
(4, 4, 'Set', '2013-06-24 19:45:40'),
(5, 3, 'Shared Memory', '2013-07-11 19:04:32'),
(5, 2, 'ABAP/4 Memory', '2013-07-11 19:04:32'),
(5, 1, 'SAP-Memory', '2013-07-11 19:04:32'),
(6, 1, 'MESSAGE Y123', '2013-06-29 19:48:17'),
(6, 2, 'MESSAGE E123(9999).', '2013-06-29 19:48:17'),
(6, 3, 'MESSAGE ID ''AT'' TYPE ''S'' NUMBER 100', '2013-06-29 19:48:55'),
(6, 4, 'MESSAGE E123 by Fielda Fieldb', '2013-06-29 19:48:55'),
(7, 1, 'Redundant data is not returned to the resultant set', '2013-06-29 19:52:59'),
(7, 2, 'Redundant data from the outer table is included', '2013-06-29 19:52:59'),
(7, 4, 'Run time error', '2013-06-29 19:54:05'),
(7, 4, 'Redundant data from the inner table is included', '2013-06-29 19:54:05'),
(8, 1, 'Data Element', '2013-06-29 19:56:51'),
(8, 2, 'Domain', '2013-06-29 19:56:51'),
(8, 3, 'Values', '2013-06-29 19:57:35'),
(8, 4, 'Nothing', '2013-06-29 19:57:35'),
(9, 1, 'Row count of the current line', '2013-06-29 20:04:41'),
(9, 2, 'Height of the current line', '2013-06-29 20:04:41'),
(9, 3, 'Width of the current line', '2013-06-29 20:05:45'),
(9, 4, 'No of characters in the current line', '2013-06-29 20:05:45'),
(12, 1, 'The first field is mandt with a external data type CLNT and specified as a key field', '2013-06-30 19:11:02'),
(12, 2, 'Depends how Basis has configured the client', '2013-06-30 19:11:02'),
(12, 4, 'The first field is mandt with a domain CLNT but not specified as a key field', '2013-06-30 19:11:02'),
(12, 3, 'The option ''Client Specified'' is added to the Select statement', '2013-06-30 19:13:23'),
(13, 1, 'The primary index is automatically created when the table is activated', '2013-07-02 19:06:13'),
(13, 2, 'The key fields of the table make up the primary index', '2013-07-02 19:06:13'),
(13, 3, 'The primary index ID is designated by the Database Adminstrator', '2013-07-02 19:06:13'),
(13, 4, 'The developer designates the fields to be used as the primary index', '2013-07-02 19:06:13'),
(14, 1, 'All Lists', '2013-07-02 19:07:55'),
(14, 2, 'Basic Lists', '2013-07-02 19:07:55'),
(14, 3, 'Secondary Lists', '2013-07-02 19:07:55'),
(15, 1, 'Program A becomes active in the same internal session of Program B', '2013-07-02 19:11:41'),
(15, 2, 'Program B becomes active in the same internal session of Program A', '2013-07-02 19:11:41'),
(15, 3, 'User Context is flushed', '2013-07-02 19:11:41'),
(15, 4, 'Program B runs in a new internal session', '2013-07-02 19:11:41'),
(16, 1, 'Run time error', '2013-07-02 19:15:59'),
(16, 2, 'All entries from DBTAB are retrieved', '2013-07-02 19:15:59'),
(16, 3, 'Only distinct values for key1', '2013-07-02 19:15:59'),
(16, 4, 'No entries are retrieved', '2013-07-02 19:15:59'),
(17, 1, 'Only OR can be used as a logical operator in the ON condition', '2013-07-02 19:18:09'),
(17, 2, 'A Left Outer Join is not permitted in OPEN SQL', '2013-07-02 19:18:09'),
(17, 3, 'A join statement is found to the right of the join operator', '2013-07-02 19:18:09'),
(17, 4, 'At least one field frorm the table on the right is required for comparison in the ON condition', '2013-07-02 19:18:09'),
(18, 1, 'same data type only is required for check field and referenced field', '2013-07-02 19:21:35'),
(18, 2, 'all key fields MUST have domain equality between check table and foreign key table', '2013-07-02 19:21:35'),
(18, 3, 'same domain is required for check field and referenced field', '2013-07-02 19:21:35'),
(18, 4, 'same data element is required for check field and referenced field', '2013-07-02 19:21:35'),
(19, 1, 'Sales Order', '2013-07-02 19:22:56'),
(19, 2, 'Country Keys', '2013-07-02 19:22:56'),
(19, 3, 'Cost Centres', '2013-07-02 19:22:56'),
(19, 4, 'Vendors', '2013-07-02 19:22:56'),
(20, 1, 'Label', '2013-07-02 19:24:05'),
(20, 2, 'Length', '2013-07-02 19:24:05'),
(20, 3, 'Fixed Values', '2013-07-02 19:24:05'),
(20, 4, 'Type', '2013-07-02 19:24:05'),
(21, 1, 'To insulate the developer from the database', '2013-07-02 19:30:09'),
(21, 2, 'To provide data security at the application level', '2013-07-02 19:30:09'),
(21, 3, 'To connect to the operating system', '2013-07-02 19:30:09'),
(21, 4, 'To support the creation and management of metadata', '2013-07-02 19:30:09'),
(22, 1, 'SAP Memory', '2013-07-02 19:32:21'),
(22, 2, 'Tables', '2013-07-02 19:32:21'),
(22, 3, 'ABAP/4 memory', '2013-07-02 19:32:21'),
(23, 1, 'Insert ITAB', '2013-07-02 19:34:13'),
(23, 2, 'Append', '2013-07-02 19:34:13'),
(23, 3, 'Read Table ITAB', '2013-07-02 19:34:13'),
(23, 4, 'Select * into Table ITAB from dbtab.', '2013-07-02 19:34:13'),
(23, 5, 'Collect', '2013-07-02 19:34:13'),
(24, 1, 'No Standard Heading', '2013-07-02 19:35:22'),
(24, 2, 'No Standard Page Heading', '2013-07-02 19:35:22'),
(24, 3, 'Suppress Standard', '2013-07-02 19:35:22'),
(24, 4, 'System>List>Save', '2013-07-02 19:35:22'),
(25, 1, 'Data in the table is automatically deleted and must be reloaded', '2013-07-05 09:00:42'),
(25, 2, 'The table in the database is renamed and eventually deleted', '2013-07-05 09:00:42'),
(25, 3, 'The indexes for the table needs to manually be reconstructed in the ABAP Dictionary', '2013-07-05 09:00:42'),
(25, 4, 'The revised table in the ABAP/4 Dictionary is activated', '2013-07-05 09:00:42'),
(25, 5, 'The table in the database is recreated', '2013-07-05 09:00:42'),
(26, 1, 'Nothing, the data remains in the hidden area', '2013-07-05 09:07:18'),
(26, 2, 'The hide data isrestored to shared memory', '2013-07-05 09:07:18'),
(26, 3, 'The Hide data is not available to the program', '2013-07-05 09:07:18'),
(26, 4, 'It is transferred back to the fields defined in the program', '2013-07-05 09:07:18'),
(27, 1, 'Data element documentation', '2013-07-05 09:13:25'),
(27, 2, 'Domain short text', '2013-07-05 09:13:25'),
(27, 3, 'Search help', '2013-07-05 09:13:25'),
(27, 4, 'Domain Help values', '2013-07-05 09:13:25'),
(28, 1, 'Type S Function Codes', '2013-07-05 09:15:05'),
(28, 2, 'Type T Functions Codes', '2013-07-05 09:15:05'),
(28, 3, 'Normal Function Codes', '2013-07-05 09:15:05'),
(28, 4, 'Function Codes that Start with P', '2013-07-05 09:15:05'),
(29, 1, 'Starting at Column 10, Row 20 Ending at Column 20, Row 30', '2013-07-05 09:17:05'),
(29, 2, 'Starting at Column 10, Row 30 Ending at Column 20, Row 20', '2013-07-05 09:17:05'),
(29, 3, 'Starting at Row 10, Column 20 Ending at Row 20, Column 30', '2013-07-05 09:17:05'),
(30, 1, 'Appends a new line', '2013-07-05 09:21:11'),
(30, 2, 'adds the numeric fields to an existing entry', '2013-07-05 09:21:11'),
(30, 3, 'Creates a new entry', '2013-07-05 09:21:11'),
(31, 1, 'Buffers are always used', '2013-07-05 09:23:07'),
(31, 2, 'Buffers are always bypassed', '2013-07-05 09:23:07'),
(31, 3, 'The choice can be made to use or bypass buffers', '2013-07-05 09:23:07'),
(32, 2, 'SUBMIT ZTST VIA SELECTION-SCREEN', '2013-07-05 09:25:28'),
(32, 3, 'SUBMIT ZTST AND RETURN', '2013-07-05 09:25:28'),
(33, 1, 'When you programatically increment it', '2013-07-05 09:29:23'),
(33, 2, 'At the end of an interactive processing block', '2013-07-05 09:29:23'),
(33, 3, 'At the beginning of an interactive processing block', '2013-07-05 09:29:23'),
(34, 1, 'Decimals must be defined in the domain', '2013-07-05 09:30:58'),
(34, 2, 'The field must be numeric', '2013-07-05 09:30:58'),
(34, 3, 'The field must be linked to another field of type CUKY', '2013-07-05 09:30:58'),
(34, 4, 'No other requirement exists', '2013-07-05 09:30:58'),
(35, 1, 'For Global Master Data', '2013-07-05 09:34:49'),
(35, 2, 'When the most current data is not required', '2013-07-05 09:34:49'),
(35, 3, 'When the most current data is required', '2013-07-05 09:34:49'),
(35, 4, 'For Small Static non volatile tables', '2013-07-05 09:34:49'),
(101, 4, 'Commit Work', '2013-07-16 19:32:57'),
(101, 3, 'CALL FUNCTION DEQUEUE_ALL', '2013-07-16 19:32:57'),
(101, 2, 'Reset Command', '2013-07-16 19:32:57'),
(101, 1, 'End the Transaction', '2013-07-16 19:32:57'),
(37, 1, 'A view contains data', '2013-07-05 10:06:28'),
(37, 2, 'Maintenance Views are not updateable', '2013-07-05 10:06:28'),
(37, 3, 'A view is aurtomatically created on the database upon activation', '2013-07-05 10:06:28'),
(37, 4, 'Views can be buffered', '2013-07-05 10:06:28'),
(38, 1, 'SY-CUROW', '2013-07-05 10:08:00'),
(38, 2, 'SY-PAGNO', '2013-07-05 10:08:00'),
(38, 3, 'SY-CPAGE', '2013-07-05 10:08:00'),
(38, 4, 'SY-INDEX', '2013-07-05 10:08:00'),
(39, 1, 'The header line and contents of the internal table are stored', '2013-07-05 11:04:15'),
(39, 2, 'You cannot EXPORT an internal table with a header line.', '2013-07-05 11:04:15'),
(39, 3, 'Only the header line is stored', '2013-07-05 11:04:15'),
(39, 4, 'Only the contents of the internal table is stored', '2013-07-05 11:04:15'),
(40, 1, 'An error in one V2 function module cause all other V2 functions to be rolled back', '2013-07-09 19:38:46'),
(40, 2, 'Each V2 function module for a given COMMIT WORK always runs in its own (separate) DB LUW', '2013-07-09 19:38:46'),
(40, 3, 'V2 errors cause V1 updates to be rolled back', '2013-07-09 19:38:46'),
(40, 4, 'They are usually time critical updates', '2013-07-09 19:38:46'),
(41, 1, 'The function module forms its own Database LUW', '2013-07-09 19:40:41'),
(41, 2, 'The remote function will continue to execute even if the caller is no longer active', '2013-07-09 19:40:41'),
(41, 3, 'They are executed on another R/3 database server', '2013-07-09 19:40:41'),
(42, 1, 'Asynchronous RFC', '2013-07-09 19:45:26'),
(42, 2, 'Synchronous RFC', '2013-07-09 19:45:26'),
(42, 3, 'Transactional RFC', '2013-07-09 19:45:26'),
(43, 1, '1,2,3', '2013-07-09 19:49:21'),
(43, 2, '3,2,1', '2013-07-09 19:49:21'),
(43, 3, '2,3,1', '2013-07-09 19:49:21'),
(44, 1, 'UPDATE', '2013-07-09 19:54:47'),
(44, 2, 'CALL FUNCTION .. .. IN UPDATE TASK', '2013-07-09 19:54:47'),
(44, 3, 'PERFORM ASYNCHRONOUS', '2013-07-09 19:54:47'),
(44, 4, 'PERFORM .. .. ON COMMIT', '2013-07-09 19:54:47'),
(45, 1, 'At the end of the transaction', '2013-07-11 19:18:46'),
(45, 2, 'Only when the program encounters more code to modify the field attributes', '2013-07-11 19:18:46'),
(45, 3, 'At PAI execution', '2013-07-11 19:18:46'),
(45, 4, 'At PBO execution', '2013-07-11 19:18:46'),
(46, 1, 'Enables execution of interactive reporting events', '2013-07-11 19:35:13'),
(46, 2, 'Data available in the dialog program must be passed to the list', '2013-07-11 19:35:13'),
(46, 3, 'Enables processing of ok_code functions', '2013-07-11 19:35:13'),
(46, 4, 'The invoking module pool still retains control of execution', '2013-07-11 19:35:13'),
(47, 1, 'ABAP memory is local to each external session', '2013-07-11 19:45:57'),
(47, 2, 'Each external session has its own ABAP memory', '2013-07-11 19:45:57'),
(47, 3, 'SAP Memory can be accessed by all external sessions', '2013-07-11 19:45:57'),
(47, 4, 'ABAP memory can be accessed by SAP memory', '2013-07-11 19:45:57'),
(47, 5, 'ABAP memory is used to pass data between the external sessions of an internal session', '2013-07-11 19:45:57'),
(48, 1, 'Shortcuts for frequently used functions', '2013-07-11 19:47:17'),
(48, 2, 'Functions that are relevant for the current Screen Group', '2013-07-11 19:47:17'),
(48, 3, 'Context Sensitive Pushbuttons', '2013-07-11 19:47:17'),
(48, 4, 'A special menu for subscreens', '2013-07-11 19:47:17'),
(49, 1, 'Issue a COMMIT WORK statement', '2013-07-11 19:48:44'),
(49, 2, 'Issue a ROLLBACK WORK statement in the program', '2013-07-11 19:48:44'),
(49, 3, 'End the dialog program', '2013-07-11 19:48:44'),
(49, 4, 'Issue a termination message (type A)', '2013-07-11 19:48:44'),
(50, 1, 'Extended Memory', '2013-07-11 19:49:45'),
(50, 2, 'SAP memory', '2013-07-11 19:49:45'),
(50, 3, 'ABAP/4 memory', '2013-07-11 19:49:45'),
(51, 1, 'Function Modules', '2013-07-11 19:50:56'),
(51, 2, 'Generic Lock Keys', '2013-07-11 19:50:56'),
(51, 3, 'A Dictionary Table', '2013-07-11 19:50:56'),
(52, 4, 'Declare a Tabstrip control in your global top include', '2013-07-11 19:54:08'),
(52, 3, 'Name your tabstrip object', '2013-07-11 19:54:08'),
(52, 2, 'Define Pushbuttons on the subscreen area', '2013-07-11 19:54:08'),
(52, 1, 'Place a tabstrip object on your screen using Screen Painter', '2013-07-11 19:54:08'),
(53, 1, 'format Check', '2013-07-12 18:45:39'),
(53, 2, 'Obligatory Field Check', '2013-07-12 18:45:39'),
(53, 3, 'Fixed Values', '2013-07-12 18:45:39'),
(53, 4, 'Foreign Key Check', '2013-07-12 18:45:39'),
(53, 5, 'Parameter Id Validation', '2013-07-12 18:45:39'),
(54, 1, 'OK_CODE is a system reserved variable and cannot be accessed directly', '2013-07-12 18:46:50'),
(54, 2, 'Because the OK_CODE gets reset at the beginning', '2013-07-12 18:46:50'),
(54, 3, 'To prevent accidental setting of the OK_CODE in a different screen', '2013-07-12 18:46:50'),
(54, 4, 'So the OK_CODE is freed up for subscreens', '2013-07-12 18:46:50'),
(55, 3, 'Immediate updates to the Database are required', '2013-07-16 19:50:30'),
(55, 2, 'your updates need to run together as a logical unit', '2013-07-16 19:50:30'),
(55, 1, 'To improve user response time', '2013-07-16 19:50:30'),
(56, 1, '0', '2013-07-12 18:50:07'),
(56, 2, '2', '2013-07-12 18:50:07'),
(56, 3, 'Unlimited', '2013-07-12 18:50:07'),
(56, 4, '1', '2013-07-12 18:50:07'),
(57, 1, 'V2', '2013-07-12 18:58:24'),
(57, 2, 'Local', '2013-07-12 18:58:24'),
(57, 3, 'V1', '2013-07-12 18:58:24'),
(57, 4, 'Transactional', '2013-07-12 18:58:24'),
(58, 1, 'an update-task function module triggered with COMMIT WORK AND WAIT', '2013-07-12 19:00:29'),
(58, 2, 'an update-task function module triggered with COMMIT WORK', '2013-07-12 19:00:29'),
(58, 3, 'Batch Input Programs', '2013-07-12 19:00:29'),
(58, 4, 'PERFORM.. .. ON COMMIT', '2013-07-12 19:00:29'),
(59, 1, 'After these events are processed the screen is redisplayed but the PBO is not processed', '2013-07-12 19:01:55'),
(59, 2, 'After these events are processed the PAI is processed then the PBO and then the screen is displayed', '2013-07-12 19:01:55'),
(59, 3, 'After these events are processed the PBO module is processed and the screen is redisplayed', '2013-07-12 19:01:55'),
(59, 4, 'None of the answers are correct', '2013-07-12 19:01:55'),
(60, 1, 'Ensure the prefix name of the radio buttons is the same', '2013-07-13 08:47:18'),
(60, 2, 'Encompass them in a Radio Button Group', '2013-07-13 08:47:18'),
(60, 3, 'Define a Group box', '2013-07-13 08:47:18'),
(60, 4, 'Make sure each one has the same Screen Group Name', '2013-07-13 08:47:18'),
(61, 1, 'ROLLBACK WORK', '2013-07-13 08:54:54'),
(61, 2, 'CALL TRANSACTION', '2013-07-13 08:54:54'),
(61, 3, 'MESSAGE S101', '2013-07-13 08:54:54'),
(61, 4, 'COMMIT WORK', '2013-07-13 08:54:54'),
(62, 1, 'To where the transaction was called', '2013-07-13 08:56:43'),
(62, 2, 'To the initial screen of the transaction', '2013-07-13 08:56:43'),
(62, 3, 'To the previous screen', '2013-07-13 08:56:43'),
(62, 4, 'To the cancel area', '2013-07-13 08:56:43'),
(63, 1, 'I type MESSAGE', '2013-07-13 09:11:59'),
(63, 2, 'A type MESSAGE', '2013-07-13 09:11:59'),
(63, 3, 'E type MESSAGE', '2013-07-13 09:11:59'),
(63, 4, 'W type MESSAGE', '2013-07-13 09:11:59'),
(63, 5, 'S type MESSAGE', '2013-07-13 09:11:59'),
(64, 1, 'Set Screen', '2013-07-13 09:20:47'),
(64, 2, 'Use the Next Screen Option on the Screen Attributes', '2013-07-13 09:20:47'),
(64, 3, 'Loop at Screen', '2013-07-13 09:20:47'),
(64, 4, 'Submit Screen', '2013-07-13 09:20:47'),
(65, 1, 'The flow logic is contained in Modules', '2013-07-13 09:24:00'),
(65, 2, 'Dialog Programs do not require a transaction to execute the module pool', '2013-07-13 09:24:00'),
(65, 3, 'Screens are optional in a dialog program', '2013-07-13 09:24:00'),
(65, 4, 'Transactions are a vehicle to execute dialog programs', '2013-07-13 09:24:00'),
(65, 5, 'update and enqueue techniques are important', '2013-07-13 09:24:00'),
(66, 1, 'contains screen field values', '2013-07-13 09:25:24'),
(66, 2, 'contains function codes', '2013-07-13 09:25:24'),
(66, 3, 'determines successful user action', '2013-07-13 09:25:24'),
(67, 1, 'Multiple subscreens are possible in a single screen', '2013-07-13 09:28:27'),
(67, 2, 'You can also specify the subscreens dynamically at runtime', '2013-07-13 09:28:27'),
(67, 3, 'Can set their own titlebar', '2013-07-13 09:28:27'),
(67, 4, 'Can set their own GUI status', '2013-07-13 09:28:27'),
(67, 5, 'have their own OK_CODE', '2013-07-13 09:28:27'),
(68, 1, 'Case OK_CODE', '2013-07-14 18:30:56'),
(68, 2, 'PAI', '2013-07-14 18:30:56'),
(68, 3, 'Module User_command', '2013-07-14 18:30:56'),
(68, 4, 'PBO', '2013-07-14 18:30:56'),
(69, 1, 'Leave to transaction', '2013-07-14 18:33:05'),
(69, 2, 'Call Transaction', '2013-07-14 18:33:05'),
(69, 3, 'Submit.. .. and Return', '2013-07-14 18:33:05'),
(69, 4, 'Submit', '2013-07-14 18:33:05'),
(70, 1, 'On the same screen', '2013-07-14 18:36:01'),
(70, 2, 'On the next screen', '2013-07-14 18:36:01'),
(70, 3, 'After the AT-EXIT Module', '2013-07-14 18:36:01'),
(70, 4, 'In the System Log', '2013-07-14 18:36:01'),
(71, 1, 'CALL report AND RETURN', '2013-07-16 18:29:32'),
(71, 2, 'SUBMIT report', '2013-07-16 18:29:32'),
(71, 3, 'LEAVE TO LIST-PROCESSING', '2013-07-16 18:29:32'),
(71, 4, 'SUBMIT ZPGMA and Return', '2013-07-16 18:29:32'),
(71, 5, 'UBMIT ZPGMA with selection-set.. ..', '2013-07-16 18:29:32'),
(72, 1, '3', '2013-07-16 18:32:02'),
(72, 2, '2', '2013-07-16 18:32:02'),
(72, 3, '0', '2013-07-16 18:32:02'),
(72, 4, '1', '2013-07-16 18:32:02'),
(73, 1, 'In the module that perform OKCODE processing', '2013-07-16 18:33:58'),
(73, 2, 'In the PAI when Process on Value-Request dialog event is triggered', '2013-07-16 18:33:58'),
(73, 3, 'In the PBO when Process on Value-Request dialog event is triggered', '2013-07-16 18:33:58'),
(73, 4, 'In the PAI when Process on Help-Request dialog event is tgriggered', '2013-07-16 18:33:58'),
(74, 1, 'There is no difference', '2013-07-16 18:35:10'),
(74, 2, 'Call Screen is used only for external screens. Set screen is only for screens in the same module pool', '2013-07-16 18:35:10'),
(74, 3, 'Call screen executes and returns to the point of call. Set Screen does not', '2013-07-16 18:35:10'),
(74, 4, 'Set screen executes and returns to the point of call. Call Screen does not', '2013-07-16 18:35:10'),
(75, 1, 'DYNP_VALUES_UPDATE', '2013-07-16 18:36:35'),
(75, 2, 'DYNP_VALUES_READ', '2013-07-16 18:36:35'),
(75, 3, 'DYNPREAD', '2013-07-16 18:36:35'),
(75, 4, 'F4IF_FIELD_VALUE_REQUEST', '2013-07-16 18:36:35'),
(76, 1, 'ENQUEUE_EZMARA', '2013-07-16 18:38:54'),
(76, 2, 'DEQUEUE_EZMARA', '2013-07-16 18:38:54'),
(76, 3, 'ENQUEUE_EZ_MARA', '2013-07-16 18:38:54'),
(76, 4, 'DEQUEUE_EZ_MARA', '2013-07-16 18:38:54'),
(77, 1, 'A subordinate output field in a table control inherits the context menu of the table control', '2013-07-16 18:40:42'),
(77, 2, 'They are a special GUI Status', '2013-07-16 18:40:42'),
(77, 3, 'A subordinate input field in a subscreen causes the subscreen to inherit the context menu of the subordinate field', '2013-07-16 18:40:42'),
(77, 4, 'Context Menus are assigned to input fields', '2013-07-16 18:40:42'),
(78, 1, 'A loop .. endloop statement for the table control only in the PAI', '2013-07-16 18:42:09'),
(78, 2, 'A loop .. endloop statement for the table control in both the PBO and the PAI', '2013-07-16 18:42:09'),
(78, 3, 'A loop .. endloop statement for the table control only in the USER_COMMAND module', '2013-07-16 18:42:09'),
(78, 4, 'A loop .. endloop statement for the table control only in the PBO', '2013-07-16 18:42:09'),
(79, 1, 'Field', '2013-07-16 18:46:04'),
(79, 2, 'Module', '2013-07-16 18:46:04'),
(79, 3, 'Check', '2013-07-16 18:46:04'),
(79, 4, 'Case', '2013-07-16 18:46:04'),
(80, 1, 'Call Subscreen in the PAI and PBO', '2013-07-16 18:47:50'),
(80, 2, 'The Call Subscreen statement is not required', '2013-07-16 18:47:50'),
(80, 3, 'Call Subscreen in the PAI only', '2013-07-16 18:47:50'),
(80, 4, 'Call Subscreen in the PBO only', '2013-07-16 18:47:50'),
(81, 1, 'Use the Data Browser', '2013-07-16 18:49:13'),
(81, 2, 'Through a Function Call', '2013-07-16 18:49:13'),
(81, 3, 'Create it as an object in the dictionary', '2013-07-16 18:49:13'),
(82, 1, 'A Commit Work is executed', '2013-07-16 18:50:39'),
(82, 2, 'System does a implicit commit', '2013-07-16 18:50:39'),
(82, 3, 'The application gathers data for update processing', '2013-07-16 18:50:39'),
(82, 4, 'The SAP LUW is concluded', '2013-07-16 18:50:39'),
(85, 1, 'Parameter passing is allowed', '2013-07-16 18:55:33'),
(84, 3, 'In the screen painter', '2013-07-16 18:54:02'),
(84, 2, 'In the Dynpro', '2013-07-16 18:54:02'),
(84, 1, 'Using the SET GROUP statement', '2013-07-16 18:54:02'),
(85, 2, 'Multiple calls to a FORM result in single execution ofthe FORM', '2013-07-16 18:55:33'),
(85, 3, 'Commit Work is allowed in the form', '2013-07-16 18:55:33'),
(85, 4, 'RollBack Work is allowed in the FORM', '2013-07-16 18:55:33'),
(86, 4, 'Direct', '2013-07-16 19:53:05'),
(86, 3, 'Synchronous', '2013-07-16 19:53:05'),
(86, 2, 'Asynchronous', '2013-07-16 19:53:05'),
(86, 1, 'Batch', '2013-07-16 19:53:05'),
(87, 1, '4', '2013-07-16 18:58:12'),
(87, 2, '1', '2013-07-16 18:58:12'),
(87, 3, '2', '2013-07-16 18:58:12'),
(87, 4, '3', '2013-07-16 18:58:12'),
(88, 1, 'TOP_LINE', '2013-07-16 18:59:36'),
(88, 2, 'w/selcolumn', '2013-07-16 18:59:36'),
(88, 3, 'LINE_SEL_MODE', '2013-07-16 18:59:36'),
(88, 4, 'Function code', '2013-07-16 18:59:36'),
(89, 1, 'An RFC Function Call that terminates normally', '2013-07-16 19:01:05'),
(89, 3, 'A user cancels the transaction', '2013-07-16 19:01:05'),
(89, 4, 'A program that does not issue a Commit Work statement', '2013-07-16 19:01:05'),
(90, 1, 'read data,lock data, update database, release locks', '2013-07-16 19:02:14'),
(90, 2, 'lock data, read data, release locks, update database', '2013-07-16 19:02:14'),
(90, 3, 'lock data, read data, update database, release locks', '2013-07-16 19:02:14'),
(91, 1, 'R', '2013-07-16 19:03:24'),
(91, 2, 'D', '2013-07-16 19:03:24'),
(91, 3, '1', '2013-07-16 19:03:24'),
(91, 4, 'M', '2013-07-16 19:03:24'),
(92, 1, 'Until the Next screen change', '2013-07-16 19:04:45'),
(92, 2, 'Until the next Set TitleBar statement', '2013-07-16 19:04:45'),
(92, 3, 'Until the next DB Luw', '2013-07-16 19:04:45'),
(93, 1, 'Screen fields followed by table control fields', '2013-07-16 19:07:08'),
(93, 2, 'All fields regardless of table control definition are transported at the beginning of PBO', '2013-07-16 19:07:08'),
(93, 3, 'Table control fields followed by the remaining screen fields', '2013-07-16 19:07:08'),
(93, 4, 'Dictonary Fields followed by Program Fields', '2013-07-16 19:07:08'),
(94, 1, 'SM13', '2013-07-16 19:08:06'),
(94, 2, 'CCMS', '2013-07-16 19:08:06'),
(94, 3, 'SM12', '2013-07-16 19:08:06'),
(94, 4, 'SE80', '2013-07-16 19:08:06'),
(95, 1, 'SAP LUW is concluded', '2013-07-16 19:10:02'),
(95, 2, 'User is notified of updates', '2013-07-16 19:10:02'),
(95, 3, 'Update requests are processed', '2013-07-16 19:10:02'),
(95, 4, 'Database commit is triggered', '2013-07-16 19:10:02'),
(96, 1, '03 - Already_Locked', '2013-07-16 19:12:01'),
(96, 2, '08 - General_Failure', '2013-07-16 19:12:01'),
(96, 3, '01 - Foreign_Lock', '2013-07-16 19:12:01'),
(96, 4, '02 - System Failure', '2013-07-16 19:12:01'),
(97, 1, 'Update task functions are logged in the SM12 log tables', '2013-07-16 19:15:26'),
(97, 2, 'Requests are not passed directly to the DB', '2013-07-16 19:15:26'),
(97, 3, 'You can combine update requests from consecutive dialog steps', '2013-07-16 19:15:26'),
(97, 4, 'All updates are performed or none at all', '2013-07-16 19:15:26'),
(98, 1, 'You must release the locks programatically', '2013-07-16 19:18:05'),
(98, 2, 'Locks generated in the dialog program are passed on to the update program', '2013-07-16 19:18:05'),
(98, 3, 'The locks are automatically released when the updates complete', '2013-07-16 19:18:05'),
(99, 1, 'In a PBO module', '2013-07-16 19:19:17'),
(99, 2, 'In a PAI Module', '2013-07-16 19:19:17'),
(99, 3, 'PAI screen event in Flow logic', '2013-07-16 19:19:17'),
(100, 1, 'Screen Pushbuttons', '2013-07-16 19:20:30'),
(100, 2, 'menu functions', '2013-07-16 19:20:30'),
(100, 3, 'Container', '2013-07-16 19:20:30'),
(100, 4, 'tool-bar pushbuttons', '2013-07-16 19:20:30'),
(102, 1, 'To the next screen defined in the screen attributes of screen 100', '2013-07-16 19:37:31'),
(102, 2, 'There is no return if the statement LEAVE TO LIST- PROCESSING is used', '2013-07-16 19:37:31'),
(102, 3, 'To the beginning of the transaction', '2013-07-16 19:37:31'),
(102, 4, 'If LEAVE TO LIST-PROCESSING AND RETURN TO SCREEN xxx is used, return will go to screen xxx', '2013-07-16 19:37:31'),
(102, 5, 'To the next screen defined in the screen attributes of screen 200', '2013-07-16 19:37:31'),
(55, 4, 'your program need the updates completed in order to continue processing', '2013-07-16 19:50:30'),
(103, 1, 'All PBO and PAI modules in the Module pool', '2013-07-19 19:25:32'),
(103, 2, 'One sequence of a PBO followed by a PAI', '2013-07-19 19:25:32'),
(103, 3, 'One sequence of a PAI followed by a PBO', '2013-07-19 19:25:32'),
(103, 4, 'All ABAP Modules of a screen', '2013-07-19 19:25:32'),
(104, 1, 'Function Type', '2013-07-19 19:28:02'),
(104, 2, 'Application', '2013-07-19 19:28:02'),
(104, 3, 'Processing type', '2013-07-19 19:28:02'),
(104, 4, 'Function Group', '2013-07-19 19:28:02'),
(105, 1, 'Titles/Headers', '2013-07-19 19:30:59'),
(105, 2, 'Parameter Texts', '2013-07-19 19:30:59'),
(105, 3, 'Selection Texts', '2013-07-19 19:30:59'),
(105, 4, 'Text Symbols', '2013-07-19 19:30:59'),
(106, 1, 'At User-Command', '2013-07-19 19:32:52'),
(106, 2, 'Message I001', '2013-07-19 19:32:52'),
(106, 3, 'Exit the Transaction', '2013-07-19 19:32:52'),
(106, 4, 'CALL TRANSACTION', '2013-07-19 19:32:52'),
(107, 1, 'Set the screen painter attribute GET Parameter and fill in the Parameter ID field with CAR', '2013-07-19 19:35:30'),
(107, 2, 'Use the GET Parameter in the PBO of the DYNPRO', '2013-07-19 19:35:30'),
(107, 3, 'Use the SET Parameter in the PBO of the DYNPRO', '2013-07-19 19:35:30'),
(107, 4, 'Use the GET Parameter in the PAI of the DYNPRO', '2013-07-19 19:35:30'),
(108, 1, 'subroutines called using on commit have no interface', '2013-07-19 19:36:58'),
(108, 2, 'subroutines called using on commit pass parameters by reference only', '2013-07-19 19:36:58'),
(108, 3, 'subroutines called using on commit pass parameters by value only', '2013-07-19 19:36:58'),
(108, 4, 'subroutines called using on commit use global data only', '2013-07-19 19:36:58'),
(109, 1, 'Prevents a single user with read-write access from attaining further locks to the same set of table rows. This is useful when you are using recursive routines to make updates.', '2013-07-19 19:40:22'),
(109, 2, 'Gives a single user read and write access to the specified table rows. No other users may access the rows.', '2013-07-19 19:40:22'),
(109, 3, 'allows multiple users to access the specified table rows, but with read-access only. No write-accesses are allowed at any time.', '2013-07-19 19:40:22'),
(110, 1, 'Event', '2013-07-19 19:41:14'),
(110, 2, 'Program Type', '2013-07-19 19:41:14'),
(110, 3, 'Transaction', '2013-07-19 19:41:14'),
(111, 1, 'Export the screen fields to memory', '2013-07-19 19:44:30'),
(111, 2, 'The mandatory fields must be filled in with "Get Parameter" statement or default values in Transaction ZABC', '2013-07-19 19:44:30'),
(111, 3, 'The mandatory fields must be filled in with "Set Parameter" statement or default values in Transaction ZABC', '2013-07-19 19:44:30'),
(111, 4, 'The first screen in transaction ZABC can indicate that mandatory fields do not need to be filled in if called by another transaction', '2013-07-19 19:44:30'),
(112, 1, 'A number range can be character only', '2013-07-19 19:46:06'),
(112, 2, 'The range consists only of numerics', '2013-07-19 19:46:06'),
(112, 3, 'A number range can be defined as both internal and external.', '2013-07-19 19:46:06'),
(112, 4, 'A number range is used only for transactional documents', '2013-07-19 19:46:06'),
(113, 1, 'SUBMIT ABC WITH CARRID = W_CARRID', '2013-07-19 19:48:29'),
(113, 2, 'CALL ABC WITH CARRID = W_CARRID', '2013-07-19 19:48:29'),
(113, 3, 'SUBMIT ABC AND SKIP FIRST SCREEN.', '2013-07-19 19:48:29'),
(113, 4, 'SUBMIT ABC VIA SELECTION-SCREEN.', '2013-07-19 19:48:29'),
(114, 1, 'Leave Program', '2013-07-19 19:51:00'),
(114, 2, 'Leave to Screen 0', '2013-07-19 19:51:00'),
(114, 3, 'Set Screen 0', '2013-07-19 19:51:00'),
(115, 1, 'Any Primary Key Fields', '2013-07-19 19:55:18'),
(115, 2, 'Any Primary Key Fields and Any Secondary Key Fields', '2013-07-19 19:55:18'),
(115, 3, 'The Primary Key Fields', '2013-07-19 19:55:18'),
(115, 4, 'The Foreign Key Dependancies', '2013-07-19 19:55:18'),
(116, 1, '1', '2013-07-19 20:02:51'),
(116, 2, '5', '2013-07-19 20:02:51'),
(116, 3, 'Infinitely', '2013-07-19 20:02:51'),
(116, 4, 'Not at all', '2013-07-19 20:02:51'),
(117, 1, 'Message A101', '2013-07-25 18:23:56'),
(117, 2, 'ROLLBACK WORK', '2013-07-25 18:23:56'),
(117, 3, 'UPDATE', '2013-07-25 18:23:56'),
(117, 4, 'Call Function in Update Task', '2013-07-25 18:23:56'),
(118, 2, 'After each related V1', '2013-07-25 18:25:36'),
(119, 1, 'An append-structure can be assigned to more than one table', '2013-07-25 18:28:18'),
(119, 2, 'A table can have only one append structure', '2013-07-25 18:28:18'),
(119, 3, 'An append-structure can only be assigned to one specific table', '2013-07-25 18:28:18'),
(119, 4, 'A table can have more than one append structure', '2013-07-25 18:28:18'),
(120, 1, 'Repository', '2013-07-25 18:30:29'),
(120, 2, 'Application', '2013-07-25 18:30:29'),
(120, 3, 'Customizing', '2013-07-25 18:30:29'),
(120, 4, 'Dictionary', '2013-07-25 18:30:29'),
(121, 1, 'If the last field has a domain of data type curr', '2013-07-25 18:33:45'),
(121, 2, 'If the last field is already an Append Structure', '2013-07-25 18:33:45'),
(121, 3, 'If the table is a pooled or cluster table', '2013-07-25 18:33:45'),
(122, 1, 'When you create a transparent table', '2013-07-25 18:41:55'),
(122, 2, 'When Basis creates the tablespace at the OS layer', '2013-07-25 18:41:55'),
(122, 3, 'When you activate a transparent table in the Dictionary', '2013-07-25 18:41:55'),
(123, 1, 'The header line and contents of the internal table are stored', '2013-07-25 18:43:38'),
(123, 2, 'You cannot EXPORT an internal table with a header line.', '2013-07-25 18:43:38'),
(123, 3, 'Only the header line is stored', '2013-07-25 18:43:38'),
(123, 4, 'Only the contents of the internal table is stored', '2013-07-25 18:43:38'),
(124, 1, 'Sort Itab Ascending', '2013-07-25 18:45:13'),
(124, 2, 'Sort ITAB', '2013-07-25 18:45:13'),
(124, 3, 'Sort ITAB BY (fieldname)', '2013-07-25 18:45:13'),
(124, 4, 'Sort itab by keys', '2013-07-25 18:45:13'),
(125, 1, 'When the Top-Of-Page event is encountered in sequence', '2013-07-25 18:47:21'),
(125, 2, 'After Number of lines per page, as specified in the REPORT, have been wriiten to the list buffer', '2013-07-25 18:47:21'),
(125, 3, 'When the report starts', '2013-07-25 18:47:21'),
(125, 4, 'When the first write statement is encountered', '2013-07-25 18:47:21'),
(126, 1, 'The program ends', '2013-07-25 18:49:28'),
(126, 2, 'The remainder of the current processing block is executed', '2013-07-25 18:49:28'),
(126, 3, 'The output list is displayed', '2013-07-25 18:49:28'),
(126, 4, 'the system leaves the processing block and branches to the processing block of the next event.', '2013-07-25 18:49:28'),
(127, 1, 'The type of foreign key field defined must be "No Key /Candidates"', '2013-07-25 18:51:22'),
(127, 2, 'The key of the text table consists of the key of the check table plus an additional language key', '2013-07-25 18:51:22'),
(127, 3, 'Cardinality must be defined as 1:1', '2013-07-25 18:51:22'),
(128, 1, 'Begin of Block, End of Block', '2013-07-25 18:54:14'),
(128, 2, 'Begin of Selection, End of Selection', '2013-07-25 18:54:14'),
(128, 3, 'Begin of Frame, End of Frame', '2013-07-25 18:54:14'),
(128, 4, 'Begin of Box, End of Box', '2013-07-25 18:54:14'),
(129, 1, 'True', '2013-08-13 18:39:23'),
(129, 2, 'False', '2013-08-13 18:39:23'),
(130, 1, 'Public Only', '2013-08-13 18:41:13'),
(130, 2, 'Protected Only', '2013-08-13 18:41:13'),
(130, 3, 'Public and Protected', '2013-08-13 18:41:13'),
(130, 4, 'None', '2013-08-13 18:41:13'),
(131, 1, 'True', '2013-08-13 18:44:06'),
(131, 2, 'False', '2013-08-13 18:44:06'),
(132, 1, 'Public', '2013-08-13 18:49:07'),
(132, 2, 'Protected', '2013-08-13 18:49:07'),
(132, 3, 'Private', '2013-08-13 18:49:07'),
(132, 4, 'None', '2013-08-13 18:49:07'),
(133, 1, 'True', '2013-08-13 19:14:04'),
(133, 2, 'False', '2013-08-13 19:14:04'),
(134, 1, 'True', '2013-08-13 19:14:57'),
(134, 2, 'False', '2013-08-13 19:14:57'),
(135, 1, 'True', '2013-08-14 19:03:32'),
(135, 2, 'False', '2013-08-14 19:03:32'),
(136, 1, 'Public', '2013-08-14 19:04:53'),
(136, 2, 'Protected', '2013-08-14 19:04:53'),
(136, 3, 'Private', '2013-08-14 19:04:53'),
(137, 1, 'Public', '2013-08-14 19:06:19'),
(137, 2, 'Protected', '2013-08-14 19:06:19'),
(137, 3, 'Private', '2013-08-14 19:06:19'),
(138, 1, 'True', '2013-08-14 19:10:08'),
(138, 2, 'False', '2013-08-14 19:10:08'),
(139, 1, 'A must define B as friend', '2013-08-14 19:15:40'),
(139, 2, 'B must define A as friend', '2013-08-14 19:15:40'),
(139, 3, 'Either A or B must define the other as friend', '2013-08-14 19:15:40'),
(139, 4, 'Both A and B must define the other as friend', '2013-08-14 19:15:40'),
(140, 1, 'True', '2013-08-14 19:21:50'),
(140, 2, 'False', '2013-08-14 19:21:50');

--
-- Truncate table before insert `questions`
--

TRUNCATE TABLE `questions`;
--
-- Dumping data for table `questions`
--

INSERT INTO `questions` (`ID`, `Question`, `Level`, `ChoiceType`, `CreatedAt`, `ActiveStatus`) VALUES
(4, 'Which of the following is <br><u>NOT</u></b> an event in the ABAP programming language', 1, 2, '2013-07-16 19:45:13', 'X'),
(5, 'What type of memory is typically used as to save default values for screen fields', 1, 1, '2013-07-16 19:45:13', 'X'),
(6, 'Select the valid customer defined message', 1, 1, '2013-07-16 19:45:13', 'X'),
(7, 'What happens when a 1 to many relationship is encountered with an inner join', 2, 1, '2013-07-16 20:04:38', 'X'),
(8, 'What must be assigned to Search Helps', 1, 1, '2013-07-16 20:11:15', 'X'),
(9, 'What is contained in variable SY-LINSZ', 2, 1, '2013-07-16 19:51:38', 'X'),
(13, 'What is true about the primary index of the table', 2, 2, '2013-07-25 19:37:47', 'X'),
(12, 'What determines if a table is client specific or client independent', 1, 1, '2013-07-16 20:11:15', 'X'),
(14, 'Default page headings are created on which list types', 1, 1, '2013-07-16 19:45:13', 'X'),
(15, 'Program A issues the following statement: SUBMIT PROGRAM B.\n<br>\nSelect the correct statement', 1, 1, '2013-07-16 19:45:13', 'X'),
(16, 'If there are no entries in <b>itab</b> then what is the result of the following select:\n<br>\n<b>Select * from DBTAB for all entries in itab where key1 = itab-key1.</b>', 1, 1, '2013-07-16 19:45:13', 'X'),
(17, 'What conditions apply for a LEFT OUTER JOIN in OPEN SQL', 2, 1, '2013-07-25 19:37:49', 'X'),
(18, 'What is needed to ensure that a check field is verified against the referenced key field of the check table', 1, 1, '2013-07-16 20:11:15', 'X'),
(19, 'What is an example of Organizational Data', 1, 1, '2013-07-16 20:11:15', 'X'),
(20, 'What are the valid attributes of a domain', 1, 2, '2013-07-16 20:11:15', 'X'),
(21, 'What are the main functions of Data Dictionary', 1, 2, '2013-07-16 20:11:15', 'X'),
(22, 'Programs that extend beyond transactional limits and want to pass data should use:', 2, 1, '2013-07-16 19:51:38', 'X'),
(23, 'Which of the following is an invalid method of populating an internal table', 1, 1, '2013-07-16 19:45:13', 'X'),
(24, 'Identify the clause that is used to suppress standard headers', 1, 1, '2013-07-16 19:45:13', 'X'),
(25, 'You have made changes to an existing table that contains data. What takes place when the Database Conversion utility is executed ?', 2, 2, '2013-07-16 20:04:38', 'X'),
(26, 'After a READ LINE on a list, what happens to the HIDE data', 2, 1, '2013-07-16 19:51:38', 'X'),
(27, 'Where does information come from when you press F1 on a screen field', 1, 1, '2013-07-16 20:11:15', 'X'),
(28, 'What will cause the AT USER-COMMAND to fire.', 1, 1, '2013-07-16 19:45:13', 'X'),
(29, 'What are the coordinates of the following Modal Dialog Box.\nWindow Starting at 10 20\nEnding at 20 30', 1, 1, '2013-07-16 20:17:52', 'X'),
(30, 'What is the effect of the Collect Statement if an entry with the same key already exists', 1, 1, '2013-07-16 19:45:13', 'X'),
(31, 'How are buffers used by inner and outer joins', 2, 1, '2013-07-16 20:04:38', 'X'),
(32, 'Mark the code that will display the selection screen of the called program ZTST.', 2, 2, '2013-07-16 19:51:38', 'X'),
(33, 'During Interactive reporting, at what point does sy-lsind get incremented by the system', 1, 1, '2013-07-07 18:38:55', ''),
(34, 'What requirement exists if a field is defined in the dictionary of type CURR', 1, 1, '2013-07-16 20:11:15', 'X'),
(35, 'Identify the case where the table buffering should be set off', 1, 1, '2013-07-16 20:11:15', 'X'),
(101, 'Three locks have been set in a Transaction.\n<br>\nWhat are the methods that would cause the release of all three', 2, 2, '2013-07-20 19:42:34', 'X'),
(37, 'What is true about views', 1, 2, '2013-07-16 20:11:15', 'X'),
(38, 'READ CURRENT LINE makes use of what system variables', 1, 2, '2013-07-07 18:38:55', ''),
(39, 'When you EXPORT an internal table that has header line to ABAP/4 memory, what is the result', 1, 1, '2013-07-07 18:38:55', ''),
(40, 'What is true about the V2 Updates within same LUW', 3, 1, '2013-07-16 20:07:58', 'X'),
(41, 'What is true about both Synchronous and A-Synchronous Remote Function Calls', 3, 1, '2013-07-16 19:59:14', 'X'),
(42, 'What technique is used to ensure remote functions are processed even if the remote computer is not active', 3, 1, '2013-07-16 19:59:14', 'X'),
(43, 'When a commit work is issued, in which order the following tasks are processed:\n<br>\n1. Dialog-task FORM routines logged with PERFORM.... ON COMMIT.\n<br>\n2. High-priority (V1) update-task function modules\n<br>\n3. Low-priority (V2) update-task function modules.', 3, 1, '2013-07-16 20:08:00', 'X'),
(44, 'What is a valid technique to start asynchronous update ', 3, 1, '2013-07-16 20:08:03', 'X'),
(45, 'A screen field is dynamically changed in a dialog program.\n<br>\nWhen does it get re-initialized ?', 1, 1, '2013-07-16 20:17:52', 'X'),
(46, 'What is true about <b>LEAVE TO LIST-PROCESSING</b> event', 2, 2, '2013-07-16 20:27:22', 'X'),
(47, 'What is true about using memory to pass data', 2, 2, '2013-07-16 19:51:38', 'X'),
(48, 'What is a context menu', 1, 1, '2013-07-11 19:47:17', ''),
(49, 'How do you reset the context of your program', 2, 2, '2013-07-16 19:51:38', 'X'),
(50, 'What type of memory is retained for the duration of external session', 2, 1, '2013-07-16 19:51:38', 'X'),
(51, 'When activating a lock object what is subsequently generated', 1, 1, '2013-07-11 19:50:56', ''),
(52, 'What steps would be required to define a Tabstrip in your dialog program', 2, 2, '2013-07-16 20:19:33', 'X'),
(53, 'Which is not an automatic check carried out the by screen processor', 1, 1, '2013-07-16 20:17:52', 'X'),
(54, 'Why is it a good idea to use back up version of the OK_CODE', 1, 1, '2013-07-16 20:17:52', 'X'),
(55, 'Why should one choose to use Asynchronous DB updates in ABAP Program', 2, 2, '2013-07-16 19:51:38', 'X'),
(56, 'How many AT EXIT-COMMAND modules are allowed in the PBO', 3, 1, '2013-07-16 20:21:04', 'X'),
(57, 'Which update request always runs asynchronously', 3, 1, '2013-07-16 20:08:05', 'X'),
(58, 'Which <b>DOES NOT<b> provide synchronous processing', 3, 1, '2013-07-16 19:59:14', 'X'),
(59, 'What is true about POH / POV events', 3, 1, '2013-07-16 20:21:04', 'X'),
(60, 'Using Screen painter how do you logically relate the radio buttons', 1, 1, '2013-07-16 20:17:52', 'X'),
(61, 'Which statements would conclude a SAP LUW', 1, 2, '2013-07-13 08:54:54', ''),
(62, 'Where should the CANCEL (Red x) button on the standard tool bar take the user ?', 2, 1, '2013-07-16 20:19:33', 'X'),
(63, 'What message type <b>does not</b> implicitly trigger database commits for the table updates specified in your program.', 2, 1, '2013-07-16 20:04:38', 'X'),
(64, 'What methods could be used to specify the next screen to be displayed', 1, 2, '2013-07-16 20:17:52', 'X'),
(65, 'What is true about dialog programs', 2, 2, '2013-07-16 20:19:33', 'X'),
(66, 'What is the use of OK_CODE', 1, 1, '2013-07-16 20:17:52', 'X'),
(67, 'What is true about subscreens', 2, 2, '2013-07-16 20:19:33', 'X'),
(68, 'After a user event is performed, which event is  triggered in Dialog Program', 1, 1, '2013-07-16 20:17:52', 'X'),
(69, 'Which statement will start a new internal session in same external session', 3, 2, '2013-07-16 19:59:14', 'X'),
(70, 'The following statement <b>MESSAGE S001(AT)</b> is issued in a PAI module of a dynpro.\n<br> \nWhere does the message appear ?', 2, 1, '2013-07-16 20:19:33', 'X'),
(71, 'Which statement ensures that the processing returns to the calling point after the user presses F3 to exit the list', 3, 1, '2013-07-16 19:59:14', 'X'),
(72, 'Program A makes call to Program B with <b>SUBMIT PROGRAM B AND RETURN</b>\n<br>\nHow many SAP LUW''s are involved', 3, 1, '2013-07-16 18:32:02', ''),
(73, 'When would you use one of the F4_IF* functions ', 2, 1, '2013-07-16 20:19:33', 'X'),
(74, 'What is the difference between call screen and set screen', 2, 1, '2013-07-16 20:19:33', 'X'),
(75, 'Indicate the functions that are capable of transporting data to the screen fields', 2, 2, '2013-07-16 20:19:33', 'X'),
(76, 'What functions are generated on the activation of the lock object : EZMARA', 1, 2, '2013-07-16 18:38:54', ''),
(77, 'What is true about context menus', 3, 2, '2013-07-16 20:21:04', 'X'),
(78, 'What is required in the flow logic in order to process a table control', 3, 1, '2013-07-16 20:21:04', 'X'),
(79, 'What statement in a dialog programming makes screen fields available for input', 2, 1, '2013-07-16 20:19:33', 'X'),
(80, 'What is the proper coding practice in the flow logic of a Dynpro when a subscreen is defined on the screen', 1, 1, '2013-07-16 20:17:52', 'X'),
(81, 'How do you define a lock object', 1, 1, '2013-07-16 18:49:13', ''),
(82, 'What happens after each dialog step', 2, 1, '2013-07-16 20:04:38', 'X'),
(84, 'Where is the modification group assignment of fields defined', 1, 1, '2013-07-16 20:17:52', 'X'),
(85, 'What is true about PERFORM ON COMMIT', 3, 1, '2013-07-16 20:08:07', 'X'),
(86, '<b>CALL FUNCTION STARTING NEW TASK</b> is an example of what type of of call', 2, 1, '2013-07-16 19:55:36', 'X'),
(87, 'How many modification groups are allowed per screen', 1, 1, '2013-07-16 18:58:12', ''),
(88, 'What attribute in a table control must be specified to activate row selection functionality', 1, 1, '2013-07-16 18:59:36', ''),
(89, 'What would trigger a ROLL BACK', 2, 1, '2013-07-16 19:01:05', ''),
(90, 'What order is recommended when setting and releasing locks', 2, 1, '2013-07-20 19:42:29', 'X'),
(91, 'Which program attribute defines a dialog program', 1, 1, '2013-07-16 19:03:24', ''),
(92, 'You have issued a SET TITLEBAR in PBO of your screen.\n<br>\nHow long will the title bar remain active', 2, 1, '2013-07-16 20:19:33', 'X'),
(93, 'What is the order of transport in PBO when a table control is defined in your program', 2, 1, '2013-07-16 19:07:08', ''),
(94, 'What transaction is used to handle termination updates', 1, 1, '2013-07-16 19:08:06', ''),
(95, 'When a commit work is issued in a transaction that employs asynchronous updating, what takes place', 3, 2, '2013-07-16 19:10:02', ''),
(96, 'If you trigger a lock object and it is already locked by some other user, what exception is raised ?', 2, 1, '2013-07-20 19:42:32', 'X'),
(97, 'What is true with the Asynchronous Update technique in a SAP LUW', 3, 2, '2013-07-16 19:15:26', ''),
(98, 'The scope parameter for your lock object function module has been set to 2.\n<br>\nWhat does this imply ?', 3, 2, '2013-07-16 19:18:05', ''),
(99, 'Where would you typically perform dynamic screen changes', 2, 1, '2013-07-16 19:19:17', ''),
(100, 'Which screen element does not contain a Function Code', 1, 1, '2013-07-16 19:20:30', ''),
(102, 'Screen 100 calls screen 200\n<br>\nScreen 200 makes a request to Perform List Processing with the suppress dialog option.\n<br>\nWhere does the processing resume after returning from the list', 3, 2, '2013-07-16 20:21:04', 'X'),
(103, 'What makes up a Dialog step', 1, 1, '2013-07-19 19:25:32', ''),
(104, 'What attribute on a update task function module determines how update requests are processed', 1, 1, '2013-07-19 19:28:02', ''),
(105, 'Mark the invalid program text element', 1, 1, '2013-07-19 19:30:59', ''),
(106, 'What will cause the system to trigger a implicit DB commit', 2, 2, '2013-07-19 19:32:52', ''),
(107, 'What methods will initialize a screen field that is defined with Parameter ID CAR', 2, 2, '2013-07-19 19:35:30', ''),
(108, 'How does a PERFORM ON COMMIT differ from a PERFORM STATEMENT', 2, 2, '2013-07-19 19:36:58', ''),
(109, 'Defining a lock object as EXCLUSIVE would specify what kind of locking', 2, 1, '2013-07-20 19:42:38', 'X'),
(110, 'What must be assigned to a Module Pool Program in order to be executed', 1, 1, '2013-07-19 19:41:14', ''),
(111, 'Transaction ZABC contains mandatory fields on the first screen.\n<br>\nA dialog program issues the statement : CALL TRANSACTION ZABC AND SKIP FIRST SCREEN\n<br>\nWhat is required on the the first screen of transaction ZABC for the call to function properly ?', 2, 1, '2013-07-19 19:44:30', ''),
(112, 'What is true about a number range', 1, 1, '2013-07-19 19:46:06', ''),
(113, 'What needs to be coded if you want to branch to a report ABC from a dialog program, but you do not want the user tp see the selection screen', 2, 1, '2013-07-19 19:48:29', ''),
(114, 'Which of the following will return to the calling screen immedeately', 2, 1, '2013-07-19 19:51:00', ''),
(115, 'What table fields are required as lock arguments in a lock object', 2, 1, '2013-07-20 19:42:40', 'X'),
(116, 'How many times would the form CALCULATE_SALES be executed in the below code?\n<br>\n<font color="blue">\nDO 5 TIMES.<br>\nPERFORM calculate_sales ON COMMIT.<br>\nEND DO.<br>\nCOMMIT WORK.<br>\n</font>', 2, 1, '2013-07-19 20:02:51', ''),
(117, 'Which ABAP statement discards the update task requests', 1, 2, '2013-07-25 18:23:56', ''),
(118, 'When are V2 updates processed', 2, 1, '2013-07-25 18:25:36', ''),
(119, 'What is true about APPEND structures', 2, 2, '2013-07-25 19:37:52', 'X'),
(120, 'What definitions are recommended to be client specific', 1, 2, '2013-07-25 18:30:29', ''),
(121, 'In which case APPEND structures are not allowed', 2, 1, '2013-07-25 19:37:54', 'X'),
(122, 'When does a  table get physically created in the underlying database', 2, 1, '2013-07-25 19:37:55', 'X'),
(123, 'When you export an internal table that has a header line to ABAP/4 memory, what is the result', 3, 1, '2013-07-25 18:43:38', ''),
(124, 'Which SORT statement is most efficient', 2, 1, '2013-07-25 18:45:13', ''),
(125, 'When is the TOP-OF-PAGE event triggered', 2, 1, '2013-07-25 18:47:21', ''),
(126, 'What happens when an EXIT statement is executed in the AT event', 2, 1, '2013-07-25 18:49:28', ''),
(127, 'What makes a text table', 1, 1, '2013-07-25 18:51:22', ''),
(128, 'Which statement would be used to create a box with a frame title on a selection screen', 1, 1, '2013-07-25 18:54:14', ''),
(129, 'Public methods of a final class can be redefined in a sub-class', 2, 1, '2013-08-13 19:54:15', 'X'),
(130, 'Which methods of a final class can be redefined in sub-classes', 2, 1, '2013-08-13 19:54:15', 'X'),
(131, 'In OO-ABAP, a class can not have a private constructor', 3, 1, '2013-08-14 19:25:17', 'X'),
(132, 'In OO-ABAP context, what type of attributes can be accessed by friend class', 2, 2, '2013-08-13 19:54:15', 'X'),
(133, 'In the context of OO-ABAP, a class can inherit from multiple classes', 2, 1, '2013-08-13 19:54:15', 'X'),
(134, 'In the context of OO-ABAP, an abstract class cannot be final class', 2, 1, '2013-08-13 19:54:15', 'X'),
(135, 'When inheriting from an Abstract class, it is mandatory to redefine all the abstract methods in the sub class', 3, 1, '2013-08-14 19:25:17', 'X'),
(136, 'What should be the visibility of Abstract Methods in Abstract class ?', 3, 2, '2013-08-14 19:25:17', 'X'),
(137, 'What should be the visibility of methods in an Interface ?', 2, 1, '2013-08-14 19:06:19', ''),
(138, 'Instance attributes of a class can not be accessed from static methods', 2, 1, '2013-08-14 19:10:08', ''),
(139, 'Consider 2 classes: A and B. <br>\nPrivate attributes of A must be accessed in B<br>\nHow should the friendship be defined ?', 3, 1, '2013-08-14 19:25:17', 'X'),
(140, 'An event handler method can take only importing parameters', 3, 1, '2013-08-14 19:25:17', 'X');

--
-- Truncate table before insert `quiz`
--

TRUNCATE TABLE `quiz`;
--
-- Dumping data for table `quiz`
--

INSERT INTO `quiz` (`QuizId`, `Description`, `Count`, `Level`, `QuestionIds`, `CreatedAt`, `ActiveStatus`) VALUES
(3, 'ABAP Basics - 1', 10, 1, '4,5,6,14,15,16,23,24,28,30', '2013-07-16 19:44:26', 'X'),
(4, 'ABAP Concepts - 1', 10, 2, '9,22,26,32,46,47,49,50,55,86', '2013-07-16 19:55:41', 'X'),
(5, 'ABAP Programming - 1', 5, 3, '41,42,58,69,71', '2013-07-16 19:58:49', 'X'),
(6, 'DB Concepts - 1', 5, 2, '7,25,31,63,82', '2013-07-16 20:03:30', 'X'),
(7, 'DB Updates - 1', 5, 3, '40,43,44,57,85', '2013-07-16 20:08:14', 'X'),
(8, 'DDIC Basics - 1', 10, 1, '8,12,18,19,20,21,27,34,35,37', '2013-07-16 20:11:36', 'X'),
(9, 'Module Pool Basics - 1', 10, 1, '29,45,53,54,60,64,66,68,80,84', '2013-07-16 20:18:06', 'X'),
(10, 'Module Pool Concepts - 1', 10, 2, '52,62,65,67,70,73,74,75,79,92', '2013-07-16 20:19:18', 'X'),
(11, 'Module Pool Programming - 1', 5, 3, '56,59,77,78,102', '2013-07-16 20:21:19', 'X'),
(12, 'Locking Concepts - 1', 5, 2, '90,96,101,109,115', '2013-07-20 19:41:58', 'X'),
(13, 'DDIC Concepts - 1', 5, 2, '13,17,119,121,122', '2013-07-25 19:37:00', 'X'),
(14, 'OO ABAP Basics - 1', 5, 2, '129,130,132,133,134', '2013-08-13 19:54:15', 'X'),
(15, 'OO ABAP - 1', 5, 3, '131,135,136,139,140', '2013-08-14 19:24:39', 'X');

--
-- Truncate table before insert `quiz_meta_data`
--

TRUNCATE TABLE `quiz_meta_data`;
--
-- Dumping data for table `quiz_meta_data`
--

INSERT INTO `quiz_meta_data` (`QuizId`, `MetaKey`, `MetaValue`, `CreatedAt`) VALUES
(3, 'sync', 'Free', '2013-07-08 19:45:41'),
(4, 'sync', 'Free', '2013-07-08 19:45:41'),
(6, 'sync', 'Free', '2013-07-16 20:05:46'),
(6, 'sync', 'Premium', '2013-07-16 20:05:46'),
(3, 'sync', 'Premium', '2013-07-09 20:01:31'),
(4, 'sync', 'Premium', '2013-07-09 20:01:31'),
(5, 'sync', 'Premium', '2013-07-09 20:01:31'),
(7, 'sync', 'Premium', '2013-07-16 20:08:43'),
(8, 'sync', 'Premium', '2013-07-16 20:11:58'),
(8, 'sync', 'Free', '2013-07-16 20:11:58'),
(9, 'sync', 'Premium', '2013-07-16 20:15:05'),
(9, 'sync', 'Free', '2013-07-16 20:15:05'),
(10, 'sync', 'Premium', '2013-07-16 20:15:22'),
(10, 'sync', 'Free', '2013-07-16 20:15:22'),
(11, 'sync', 'Premium', '2013-07-16 20:15:34'),
(12, 'sync', 'Premium', '2013-07-19 20:06:47'),
(12, 'sync', 'Free', '2013-07-19 20:06:47'),
(13, 'sync', 'Premium', '2013-07-25 19:00:44'),
(13, 'sync', 'Free', '2013-07-25 19:00:44'),
(14, 'tag', 'OO ABAP', '2013-08-13 19:18:17'),
(14, 'sync', 'Premium', '2013-08-13 19:18:17'),
(14, 'sync', 'Free', '2013-08-13 19:18:17'),
(15, 'tag', 'OO ABAP', '2013-08-14 19:24:19'),
(15, 'sync', 'Premium', '2013-08-14 19:24:19');

